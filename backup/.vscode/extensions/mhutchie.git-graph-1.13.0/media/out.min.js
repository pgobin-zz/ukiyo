"use strict";(function(k,a){var t=acquireVsCodeApi();var R={alert:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>',arrowLeft:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12"><path fill-rule="evenodd" d="M7.67,4.33V1L1,6 7.67,11V7.67H11V4.33Z"/></svg>',arrowRight:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12"><path fill-rule="evenodd" d="M4.33,4.33V1L11,6 4.33,11V7.67H1V4.33Z"/></svg>',branch:'<svg xmlns="http://www.w3.org/2000/svg" width="10" height="16" viewBox="0 0 10 16"><path fill-rule="evenodd" d="M10 5c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v.3c-.02.52-.23.98-.63 1.38-.4.4-.86.61-1.38.63-.83.02-1.48.16-2 .45V4.72a1.993 1.993 0 0 0-1-3.72C.88 1 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2 1.11 0 2-.89 2-2 0-.53-.2-1-.53-1.36.09-.06.48-.41.59-.47.25-.11.56-.17.94-.17 1.05-.05 1.95-.45 2.75-1.25S8.95 7.77 9 6.73h-.02C9.59 6.37 10 5.73 10 5zM2 1.8c.66 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2C1.35 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2zm0 12.41c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm6-8c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>',check:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"></path></svg>',close:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>',copy:'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z"/></svg>',download:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 -0.5 16 16.5"><path fill-rule="evenodd" d="M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02 5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7 1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81 0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16 5.06 14.08 4 12 4z"/></svg>',gear:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="-1 -1 18 18"><path fill-rule="evenodd" d="M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"/></svg>',info:'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"/></svg>',openFile:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M8.5 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V4.5L8.5 1zM11 14H1V2h7l3 3v9zM6 4.5l4 3-4 3v-2c-.98-.02-1.84.22-2.55.7-.71.48-1.19 1.25-1.45 2.3.02-1.64.39-2.88 1.13-3.73.73-.84 1.69-1.27 2.88-1.27v-2H6z"/></svg>',pencil:'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>',search:'<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="-0.5 -2 18 18"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>',tag:'<svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16"><path fill-rule="evenodd" d="M7.73 1.73C7.26 1.26 6.62 1 5.96 1H3.5C2.13 1 1 2.13 1 3.5v2.47c0 .66.27 1.3.73 1.77l6.06 6.06c.39.39 1.02.39 1.41 0l4.59-4.59a.996.996 0 0 0 0-1.41L7.73 1.73zM2.38 7.09c-.31-.3-.47-.7-.47-1.13V3.5c0-.88.72-1.59 1.59-1.59h2.47c.42 0 .83.16 1.13.47l6.14 6.13-4.73 4.73-6.13-6.15zM3.01 3h2v2H3V3h.01z"/></svg>',loading:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="32" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M10.24 7.4a4.15 4.15 0 0 1-1.2 3.6 4.346 4.346 0 0 1-5.41.54L4.8 10.4.5 9.8l.6 4.2 1.31-1.26c2.36 1.74 5.7 1.57 7.84-.54a5.876 5.876 0 0 0 1.74-4.46l-1.75-.34zM2.96 5a4.346 4.346 0 0 1 5.41-.54L7.2 5.6l4.3.6-.6-4.2-1.31 1.26c-2.36-1.74-5.7-1.57-7.85.54C.5 5.03-.06 6.65.01 8.26l1.75.35A4.17 4.17 0 0 1 2.96 5z"/></svg>',refresh:'<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M 8.244,15.672 C 11.441,15.558 14.868,13.024 14.828,8.55 14.773,6.644 13.911,4.852 12.456,3.619 l -1.648,1.198 c 1.265,0.861 2.037,2.279 2.074,3.809 0.016,2.25 -1.808,5.025 -4.707,5.077 -2.898,0.052 -4.933,-2.08 -5.047,-4.671 C 3.07,6.705 4.635,4.651 6.893,4.088 l 0.041,1.866 3.853,-3.126 -3.978,-2.772 0.032,2.077 c -3.294,0.616 -5.755,3.541 -5.667,6.982 -3.88e-4,4.233 3.873,6.670 7.07,6.557 z"/></svg>',openFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="openFolderIcon" viewBox="0 0 30 30"><path d="M 5 4 C 3.895 4 3 4.895 3 6 L 3 9 L 3 11 L 22 11 L 27 11 L 27 8 C 27 6.895 26.105 6 25 6 L 12.199219 6 L 11.582031 4.9707031 C 11.221031 4.3687031 10.570187 4 9.8671875 4 L 5 4 z M 2.5019531 13 C 1.4929531 13 0.77040625 13.977406 1.0664062 14.941406 L 4.0351562 24.587891 C 4.2941563 25.426891 5.0692656 26 5.9472656 26 L 15 26 L 24.052734 26 C 24.930734 26 25.705844 25.426891 25.964844 24.587891 L 28.933594 14.941406 C 29.229594 13.977406 28.507047 13 27.498047 13 L 15 13 L 2.5019531 13 z"/></svg>',closedFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="closedFolderIcon" viewBox="0 0 30 30"><path d="M 4 3 C 2.895 3 2 3.895 2 5 L 2 8 L 13 8 L 28 8 L 28 7 C 28 5.895 27.105 5 26 5 L 11.199219 5 L 10.582031 3.9707031 C 10.221031 3.3687031 9.5701875 3 8.8671875 3 L 4 3 z M 3 10 C 2.448 10 2 10.448 2 11 L 2 23 C 2 24.105 2.895 25 4 25 L 26 25 C 27.105 25 28 24.105 28 23 L 28 11 C 28 10.448 27.552 10 27 10 L 3 10 z"/></svg>',file:'<svg xmlns="http://www.w3.org/2000/svg" class="fileIcon" viewBox="0 0 30 30"><path d="M24.707,8.793l-6.5-6.5C18.019,2.105,17.765,2,17.5,2H7C5.895,2,5,2.895,5,4v22c0,1.105,0.895,2,2,2h16c1.105,0,2-0.895,2-2 V9.5C25,9.235,24.895,8.981,24.707,8.793z M18,10c-0.552,0-1-0.448-1-1V3.904L23.096,10H18z"/></svg>'};var s={alembic:"⚗",alien:"👽",ambulance:"🚑",apple:"🍎",arrow_down:"⬇️",arrow_up:"⬆️",art:"🎨",beers:"🍻",bento:"🍱",bookmark:"🔖",books:"📚",boom:"💥",bug:"🐛",building_construction:"🏗",bulb:"💡",busts_in_silhouette:"👥",camera_flash:"📸",card_file_box:"🗃",card_index:"📇",chart_with_upwards_trend:"📈",checkered_flag:"🏁",children_crossing:"🚸",clown_face:"🤡",construction:"🚧",construction_worker:"👷",egg:"🥚",exclamation:"❗",fire:"🔥",globe_with_meridians:"🌐",green_apple:"🍏",green_heart:"💚",hammer:"🔨",heavy_check_mark:"✔️",heavy_minus_sign:"➖",heavy_plus_sign:"➕",iphone:"📱",label:"🏷️",lipstick:"💄",lock:"🔒",loud_sound:"🔊",mag:"🔍",mute:"🔇",new:"🆕",ok_hand:"👌",package:"📦",page_facing_up:"📄",pencil:"📝",pencil2:"✏️",penguin:"🐧",poop:"💩",pushpin:"📌",racehorse:"🐎",recycle:"♻️",rewind:"⏪",robot:"🤖",rocket:"🚀",rotating_light:"🚨",see_no_evil:"🙈",shirt:"👕",sparkles:"✨",speech_balloon:"💬",tada:"🎉",triangular_ruler:"📐",truck:"🚚",twisted_rightwards_arrows:"🔀",video_game:"🎮",whale:"🐳",wheel_of_dharma:"☸️",wheelchair:"♿️",white_check_mark:"✅",wrench:"🔧",zap:"⚡️"};var i=/:([A-Za-z0-9-_]+):/g;var l={")":"(","]":"[","}":"{",">":"<"};var c={A:"Added",M:"Modified",D:"Deleted",R:"Renamed",U:"Untracked"};var r=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var p=/^[-\/].*|[\\" ><~^:?*[]|\.\.|\/\/|\/\.|@{|[.\/]$|\.lock$|^@$/g;var n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"};var o={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#x27;":"'","&#x2F;":"/"};var h=/[&<>"'\/]/g;var m=/&lt;|&gt;|&amp;|&quot;|&#x27;|&#x2F;/g;var B="&#8230;";var d="http://www.w3.org/2000/svg";var L="*";var u="";var f=-100;var g=-101;var v=40;var C=24;var b="active";var y="branchLabelsAlignedToGraph";var w="commitDetailsOpen";var x="contextMenuActive";var E="dialogActive";var S="disabled";var H="dockedCommitDetailsViewOpen";var T="fetchSupported";var D="loading";var A="refreshing";var M="tagLabelsRightAligned";var I="transition";var N="--vscode-font-family";var F="--vscode-editor-font-family";var P="--vscode-editor-findMatchHighlightBackground";var W="data-error";var U="action-running";var V="form";var z="message";function G(e,t,i){if(e.length!==t.length)return false;for(var s=0;s<e.length;s++){if(!i(e[s],t[s]))return false}return true}function O(e,t){if(e.length!==t.length)return false;for(var i=0;i<e.length;i++){if(e[i]!==t[i])return false}return true}function _(e){return e>9?e:"0"+e}function Y(e,t){var i="rgba(0,0,0,0)",s;if((s=e.match(/rgba\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)/))!==null){i="rgba("+s[1]+","+s[2]+","+s[3]+","+(parseFloat(s[4])*t).toFixed(2)+")"}else if((s=e.match(/#\s*([0-9a-fA-F]+)/))!==null){var n=s[1];var o=n.length;if(o===3||o===4||o===6||o===8){var a=o<5?{r:n[0]+n[0],g:n[1]+n[1],b:n[2]+n[2],a:o===4?n[3]+n[3]:"ff"}:{r:n[0]+n[1],g:n[2]+n[3],b:n[4]+n[5],a:o===8?n[6]+n[7]:"ff"};i="rgba("+parseInt(a.r,16)+","+parseInt(a.g,16)+","+parseInt(a.b,16)+","+(parseInt(a.a,16)*t/255).toFixed(2)+")"}}else if((s=e.match(/rgb\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)/))!==null){i="rgba("+s[1]+","+s[2]+","+s[3]+","+t+")"}return i}function q(e){return e.replace(h,function(e){return n[e]})}function j(e){return e.replace(m,function(e){return o[e]})}function X(e){var t=/https?:\/\/\S+[^,.?!'":;\s]/gu,i,s=0,n="";while(i=t.exec(e)){if(s!==i.index){n+=q(K(e.substring(s,i.index)))}s=t.lastIndex;var o=i[0];var a=o.substring(o.length-1);if(i.index>0&&typeof l[a]==="string"&&e.substring(i.index-1,i.index)===l[a]){o=o.substring(0,o.length-1)}else{a=""}var r=q(o);n+='<a href="'+r+'" target="_blank">'+r+"</a>"+q(a)}return n+q(K(e.substring(s)))}function K(e){return e.replace(i,function(e,t){return typeof s[t]==="string"?s[t]:e})}function e(e){var t=/^:[A-Za-z0-9-_]+:$/;for(var i=0;i<e.length;i++){if(t.test(e[i].shortcode)){s[e[i].shortcode.substr(1,e[i].shortcode.length-2)]=e[i].emoji}}}function $(e,t,i){var s=k.getElementsByClassName(e),n;for(n=0;n<s.length;n++){s[n].addEventListener(t,i)}}function Z(e,t){t.parentNode.insertBefore(e,t.nextSibling)}function J(e,t,i){if(e.classList.contains(t)!==i){if(i){e.classList.add(t)}else{e.classList.remove(t)}}}function Q(e){var t=[];for(var i=0;i<e.childNodes.length;i++){if(e.childNodes[i].childNodes.length>0){t.push.apply(t,Q(e.childNodes[i]))}else if(e.childNodes[i].textContent!==null&&e.childNodes[i].textContent!==""){t.push(e.childNodes[i])}}return t}function ee(e,t){var i=[];for(var s=0;s<e.children.length;s++){if(e.children[s].children.length>0){i.push.apply(i,ee(e.children[s],t))}else if(e.children[s].className===t){i.push(e.children[s])}}return i}function te(e){t.postMessage(e)}function ie(e){return k.documentElement.style.getPropertyValue(e)}var se=function(){function e(e,t,i,s,n){var a=this;this.options=[];this.optionsSelected=[];this.lastSelected=0;this.numSelected=0;this.dropdownVisible=false;this.showInfo=t;this.multipleAllowed=i;this.changeCallback=n;this.elem=k.getElementById(e);this.menuElem=k.createElement("div");this.menuElem.className="dropdownMenu";var o=this.menuElem.appendChild(k.createElement("div"));o.className="dropdownFilter";this.filterInput=o.appendChild(k.createElement("input"));this.filterInput.className="dropdownFilterInput";this.filterInput.placeholder="Filter "+s+"...";this.optionsElem=this.menuElem.appendChild(k.createElement("div"));this.optionsElem.className="dropdownOptions";this.noResultsElem=this.menuElem.appendChild(k.createElement("div"));this.noResultsElem.className="dropdownNoResults";this.noResultsElem.innerHTML="No results found.";this.currentValueElem=this.elem.appendChild(k.createElement("div"));this.currentValueElem.className="dropdownCurrentValue";J(this.elem,"multi",i);this.elem.appendChild(this.menuElem);k.addEventListener("click",function(e){if(!e.target)return;if(e.target===a.currentValueElem){a.dropdownVisible=!a.dropdownVisible;if(a.dropdownVisible){a.filterInput.value="";a.filter()}a.elem.classList.toggle("dropdownOpen");if(a.dropdownVisible)a.filterInput.focus()}else if(a.dropdownVisible){if(e.target.closest(".dropdown")!==a.elem){a.close()}else{var t=e.target.closest(".dropdownOption");if(t!==null&&t.parentNode===a.optionsElem&&typeof t.dataset.id!=="undefined"){var i=parseInt(t.dataset.id),s=false;if(a.multipleAllowed){if(i===0){if(!a.optionsSelected[0]){a.optionsSelected[0]=true;for(var n=1;n<a.optionsSelected.length;n++){a.optionsSelected[n]=false}a.numSelected=1;s=true}}else{if(a.optionsSelected[0]){a.optionsSelected[0]=false;a.numSelected--}a.numSelected+=a.optionsSelected[i]?-1:1;a.optionsSelected[i]=!a.optionsSelected[i];if(a.numSelected===0){a.optionsSelected[0]=true;a.numSelected=1}s=true}if(s&&a.optionsSelected[i])a.lastSelected=i}else{a.close();if(a.lastSelected!==i){a.optionsSelected[a.lastSelected]=false;a.optionsSelected[i]=true;a.lastSelected=i;s=true}}if(s){var o=a.menuElem.scrollTop;a.render();if(a.dropdownVisible&&a.multipleAllowed)a.menuElem.scroll(0,o);a.changeCallback(a.getSelectedOptions(false))}}}}},true);k.addEventListener("contextmenu",function(){return a.close()},true);k.addEventListener("keyup",function(e){if(e.key==="Escape")a.close()},true);this.filterInput.addEventListener("keyup",function(){return a.filter()})}e.prototype.setOptions=function(e,t){this.options=e;this.optionsSelected=[];this.numSelected=0;var i=-1,s;for(var n=0;n<e.length;n++){s=t.indexOf(e[n].value)>-1;this.optionsSelected[n]=s;if(s){i=n;this.numSelected++}}if(i===-1){i=0;this.optionsSelected[i]=true;this.numSelected++}this.lastSelected=i;if(this.dropdownVisible&&e.length<=1)this.close();this.render()};e.prototype.refresh=function(){if(this.options.length>0)this.render()};e.prototype.render=function(){this.elem.classList.add("loaded");this.currentValueElem.innerHTML=this.getCurrentValueText();var e="";for(var t=0;t<this.options.length;t++){e+='<div class="dropdownOption'+(this.optionsSelected[t]?" selected":"")+'" data-id="'+t+'">'+(this.multipleAllowed&&this.optionsSelected[t]?'<div class="dropdownOptionMultiSelected">'+R.check+"</div>":"")+q(this.options[t].name)+(this.showInfo?'<div class="dropdownOptionInfo" title="'+q(this.options[t].value)+'">'+R.info+"</div>":"")+"</div>"}this.optionsElem.className="dropdownOptions"+(this.showInfo?" showInfo":"");this.optionsElem.innerHTML=e;this.filterInput.style.display="none";this.noResultsElem.style.display="none";this.menuElem.style.cssText="opacity:0; display:block;";this.currentValueElem.style.width=Math.max(this.menuElem.offsetWidth+((this.showInfo||this.multipleAllowed)&&this.menuElem.offsetHeight<272?0:12),138)+"px";this.menuElem.style.cssText="right:0; overflow-y:auto; max-height:297px;";if(this.dropdownVisible)this.filter()};e.prototype.filter=function(){var e=this.filterInput.value.toLowerCase(),t,i=false;for(var s=0;s<this.options.length;s++){t=this.options[s].name.toLowerCase().indexOf(e)>-1;this.optionsElem.children[s].style.display=t?"block":"none";if(t)i=true}this.filterInput.style.display="block";this.noResultsElem.style.display=i?"none":"block"};e.prototype.close=function(){this.elem.classList.remove("dropdownOpen");this.dropdownVisible=false};e.prototype.getSelectedOptions=function(e){var t=[];for(var i=0;i<this.options.length;i++){if(this.optionsSelected[i])t.push(e?this.options[i].name:this.options[i].value)}return t};e.prototype.getCurrentValueText=function(){var e="",t=this.getSelectedOptions(true);for(var i=0;i<t.length;i++){e+=(i>0?i<t.length-1?", ":" & ":"")+t[i]}return e};return e}();var ne="findCurrentCommit";var oe="findMatch";var ae=function(){function e(e){var t=this;this.commits=[];this.text="";this.isCaseSensitive=false;this.isRegex=false;this.matches=[];this.position=-1;this.visible=false;this.view=e;this.widgetElem=k.createElement("div");this.widgetElem.className="findWidget";this.widgetElem.innerHTML='<input id="findInput" type="text" placeholder="Find" disabled/><span id="findCaseSensitive" class="findModifer" title="Match Case">Aa</span><span id="findRegex" class="findModifer" title="Use Regular Expression">.*</span><span id="findPosition"></span><span id="findPrev"></span><span id="findNext"></span><span id="findClose"></span>';k.body.appendChild(this.widgetElem);this.inputElem=k.getElementById("findInput");var i=null;this.inputElem.addEventListener("keyup",function(e){if(e.key==="Enter"&&t.text!==""){t.next()}else{if(i!==null)clearTimeout(i);i=setTimeout(function(){i=null;if(t.text!==t.inputElem.value){t.text=t.inputElem.value;t.clearMatches();t.findMatches(t.getCurrentHash(),true)}},200)}});this.caseSensitiveElem=k.getElementById("findCaseSensitive");this.caseSensitiveElem.addEventListener("click",function(){t.isCaseSensitive=!t.isCaseSensitive;J(t.caseSensitiveElem,b,t.isCaseSensitive);t.clearMatches();t.findMatches(t.getCurrentHash(),true)});this.regexElem=k.getElementById("findRegex");this.regexElem.addEventListener("click",function(){t.isRegex=!t.isRegex;J(t.regexElem,b,t.isRegex);t.clearMatches();t.findMatches(t.getCurrentHash(),true)});this.positionElem=k.getElementById("findPosition");this.prevElem=k.getElementById("findPrev");this.prevElem.classList.add(S);this.prevElem.innerHTML=R.arrowLeft;this.prevElem.addEventListener("click",function(){return t.prev()});this.nextElem=k.getElementById("findNext");this.nextElem.classList.add(S);this.nextElem.innerHTML=R.arrowRight;this.nextElem.addEventListener("click",function(){return t.next()});var s=k.getElementById("findClose");s.innerHTML=R.close;s.addEventListener("click",function(){return t.close()})}e.prototype.show=function(e){if(!this.visible){this.visible=true;this.inputElem.value=this.text;this.inputElem.disabled=false;this.updatePosition(-1,false);J(this.widgetElem,I,e);this.widgetElem.classList.add(b)}this.inputElem.focus()};e.prototype.close=function(){if(!this.visible)return;this.visible=false;this.widgetElem.classList.add(I);this.widgetElem.classList.remove(b);this.clearMatches();this.text="";this.matches=[];this.position=-1;this.inputElem.value=this.text;this.inputElem.disabled=true;this.widgetElem.removeAttribute(W);this.prevElem.classList.add(S);this.nextElem.classList.add(S);this.view.saveState()};e.prototype.update=function(e){this.commits=e;if(this.visible)this.findMatches(this.getCurrentHash(),false)};e.prototype.setColour=function(e){k.body.style.setProperty("--git-graph-findMatch",e);k.body.style.setProperty("--git-graph-findMatchCommit",Y(e,.5))};e.prototype.getState=function(){return{text:this.text,isCaseSensitive:this.isCaseSensitive,isRegex:this.isRegex,currentHash:this.getCurrentHash(),visible:this.visible}};e.prototype.getCurrentHash=function(){return this.position>-1?this.matches[this.position].hash:null};e.prototype.restoreState=function(e){if(!e.visible)return;this.text=e.text;this.isCaseSensitive=e.isCaseSensitive;this.isRegex=e.isRegex;J(this.caseSensitiveElem,b,this.isCaseSensitive);J(this.regexElem,b,this.isRegex);this.show(false);if(this.text!=="")this.findMatches(e.currentHash,false)};e.prototype.isVisible=function(){return this.visible};e.prototype.findMatches=function(t,e){this.matches=[];this.position=-1;if(this.text!==""){var i=this.view.getColumnVisibility(),s,n=void 0,o=this.isRegex?this.text:this.text.replace(/[\\\[\](){}|.*+?^$]/g,"\\$&"),a="u"+(this.isCaseSensitive?"":"i");try{s=new RegExp(o,a);n=new RegExp(o,"g"+a);this.widgetElem.removeAttribute(W)}catch(e){s=null;n=null;this.widgetElem.setAttribute(W,e.message)}if(s!==null&&n!==null){var r=k.getElementsByClassName("commit"),l=0,h=void 0,c=false;for(var m=0;m<this.commits.length;m++){h=this.commits[m];var d=Te(h.heads,h.remotes);if(h.hash!==L&&(i.author&&s.test(h.author)||i.commit&&(h.hash.search(s)===0||s.test(Le(h.hash)))||s.test(h.message)||d.heads.some(function(e){return s.test(e.name)||e.remotes.some(function(e){return s.test(e)})})||d.remotes.some(function(e){return s.test(e.name)})||h.tags.some(function(e){return s.test(e.name)})||i.date&&s.test(Ee(h.date).value))){while(l<r.length&&r[l].dataset.hash!==h.hash)l++;if(l===r.length)continue;this.matches.push({hash:h.hash,elem:r[l]});var u=Q(r[l]),p=void 0;for(var f=0;f<u.length;f++){p=u[f];var g=0,v=0,C=p.textContent,b=void 0;n.lastIndex=0;while(b=n.exec(C)){if(b[0].length===0){c=true;break}if(v!==b.index){if(g!==v)p.parentNode.insertBefore(re(C.substring(g,v)),p);p.parentNode.insertBefore(k.createTextNode(C.substring(v,b.index)),p);g=b.index}v=n.lastIndex}if(v>0){if(g!==v)p.parentNode.insertBefore(re(C.substring(g,v)),p);if(v!==C.length){p.textContent=C.substring(v)}else{p.parentNode.removeChild(p)}}if(c)break}if(i.commit&&h.hash.search(s)===0&&!s.test(Le(h.hash))&&u.length>0){var y=u[u.length-1];y.parentNode.replaceChild(re(y.textContent),y)}if(c)break}}if(c){this.widgetElem.setAttribute(W,"Cannot use a regular expression which has zero length matches");this.clearMatches();this.matches=[]}}}else{this.widgetElem.removeAttribute(W)}J(this.prevElem,S,this.matches.length===0);J(this.nextElem,S,this.matches.length===0);var w=-1;if(this.matches.length>0){w=0;if(t!==null){var x=this.matches.findIndex(function(e){return e.hash===t});if(x>-1)w=x}}this.updatePosition(w,e)};e.prototype.clearMatches=function(){for(var e=0;e<this.matches.length;e++){if(e===this.position)this.matches[e].elem.classList.remove(ne);var t=ee(this.matches[e].elem,oe),i=void 0;for(var s=0;s<t.length;s++){i=t[s];var n=i.childNodes[0].textContent;var o=i.previousSibling,a=i.previousElementSibling;while(o!==null&&o!==a&&o.textContent!==null){n=o.textContent+n;i.parentNode.removeChild(o);o=i.previousSibling}o=i.nextSibling;a=i.nextElementSibling;while(o!==null&&o!==a&&o.textContent!==null){n=n+o.textContent;i.parentNode.removeChild(o);o=i.nextSibling}i.parentNode.replaceChild(k.createTextNode(n),i)}}};e.prototype.updatePosition=function(e,t){if(this.position>-1)this.matches[this.position].elem.classList.remove(ne);this.position=e;if(this.position>-1){this.matches[this.position].elem.classList.add(ne);if(t)this.view.scrollToCommit(this.matches[e].hash,false)}this.positionElem.innerHTML=this.matches.length>0?this.position+1+" of "+this.matches.length:"No Results";this.view.saveState()};e.prototype.prev=function(){if(this.matches.length===0)return;this.updatePosition(this.position>0?this.position-1:this.matches.length-1,true)};e.prototype.next=function(){if(this.matches.length===0)return;this.updatePosition(this.position<this.matches.length-1?this.position+1:0,true)};return e}();function re(e){var t=k.createElement("span");t.className=oe;t.innerHTML=e;return t}var le=function(){function e(e){this.lines=[];this.end=0;this.numUncommitted=0;this.colour=e}e.prototype.addLine=function(e,t,i,s){this.lines.push({p1:e,p2:t,lockedFirst:s});if(i){if(t.y<this.numUncommitted)this.numUncommitted=t.y}else{this.numUncommitted++}};e.prototype.getColour=function(){return this.colour};e.prototype.getEnd=function(){return this.end};e.prototype.setEnd=function(e){this.end=e};e.prototype.draw=function(e,t,i){var s=t.graphColours[this.colour%t.graphColours.length],n,o,a,r,l,h=[],c="",m="",d=t.grid.y*(t.graphStyle==="angular"?.38:.8),u,p;for(n=0;n<this.lines.length;n++){u=this.lines[n];o=u.p1.x*t.grid.x+t.grid.offsetX;a=u.p1.y*t.grid.y+t.grid.offsetY;r=u.p2.x*t.grid.x+t.grid.offsetX;l=u.p2.y*t.grid.y+t.grid.offsetY;if(i>-1){if(u.p1.y>i){a+=t.grid.expandY;l+=t.grid.expandY}else if(u.p2.y>i){if(o===r){l+=t.grid.expandY}else if(u.lockedFirst){h.push({p1:{x:o,y:a},p2:{x:r,y:l},isCommitted:n>=this.numUncommitted,lockedFirst:u.lockedFirst});h.push({p1:{x:r,y:a+t.grid.y},p2:{x:r,y:l+t.grid.expandY},isCommitted:n>=this.numUncommitted,lockedFirst:u.lockedFirst});continue}else{h.push({p1:{x:o,y:a},p2:{x:o,y:l-t.grid.y+t.grid.expandY},isCommitted:n>=this.numUncommitted,lockedFirst:u.lockedFirst});a+=t.grid.expandY;l+=t.grid.expandY}}}h.push({p1:{x:o,y:a},p2:{x:r,y:l},isCommitted:n>=this.numUncommitted,lockedFirst:u.lockedFirst})}n=0;while(n<h.length-1){u=h[n];p=h[n+1];if(u.p1.x===u.p2.x&&u.p2.x===p.p1.x&&p.p1.x===p.p2.x&&u.p2.y===p.p1.y&&u.isCommitted===p.isCommitted){u.p2.y=p.p2.y;h.splice(n+1,1)}else{n++}}for(n=0;n<h.length;n++){u=h[n];o=u.p1.x;a=u.p1.y;r=u.p2.x;l=u.p2.y;if(c!==""&&n>0&&u.isCommitted!==h[n-1].isCommitted){this.drawPath(e,c,m);c="";m=""}if(c===""||n>0&&(o!==h[n-1].p2.x||a!==h[n-1].p2.y))c+="M"+o.toFixed(0)+","+a.toFixed(1);if(m==="")m=u.isCommitted?s:"#808080";if(o===r){c+="L"+r.toFixed(0)+","+l.toFixed(1)}else{if(t.graphStyle==="angular"){c+="L"+(u.lockedFirst?r.toFixed(0)+","+(l-d).toFixed(1):o.toFixed(0)+","+(a+d).toFixed(1))+"L"+r.toFixed(0)+","+l.toFixed(1)}else{c+="C"+o.toFixed(0)+","+(a+d).toFixed(1)+" "+r.toFixed(0)+","+(l-d).toFixed(1)+" "+r.toFixed(0)+","+l.toFixed(1)}}}this.drawPath(e,c,m)};e.prototype.drawPath=function(e,t,i){var s=e.appendChild(k.createElementNS(d,"path")),n=e.appendChild(k.createElementNS(d,"path"));s.setAttribute("class","shadow");s.setAttribute("d",t);n.setAttribute("class","line");n.setAttribute("d",t);n.setAttribute("stroke",i)};return e}();var he=function(){function e(e){this.x=0;this.parents=[];this.nextParent=0;this.onBranch=null;this.isCommitted=true;this.isCurrent=false;this.nextX=0;this.connections=[];this.y=e}e.prototype.addParent=function(e){this.parents.push(e)};e.prototype.hasParents=function(){return this.parents.length>0};e.prototype.getNextParent=function(){if(this.nextParent<this.parents.length)return this.parents[this.nextParent];return null};e.prototype.getLastParent=function(){if(this.nextParent<1)return null;return this.parents[this.nextParent-1]};e.prototype.registerParentProcessed=function(){this.nextParent++};e.prototype.isMerge=function(){return this.parents.length>1};e.prototype.addToBranch=function(e,t){if(this.onBranch===null){this.onBranch=e;this.x=t}};e.prototype.isNotOnBranch=function(){return this.onBranch===null};e.prototype.isOnThisBranch=function(e){return this.onBranch===e};e.prototype.getBranch=function(){return this.onBranch};e.prototype.getPoint=function(){return{x:this.x,y:this.y}};e.prototype.getNextPoint=function(){return{x:this.nextX,y:this.y}};e.prototype.getIsCommitted=function(){return this.isCommitted};e.prototype.getPointConnectingTo=function(e,t){for(var i=0;i<this.connections.length;i++){if(this.connections[i].connectsTo===e&&this.connections[i].onBranch===t)return{x:i,y:this.y}}return null};e.prototype.registerUnavailablePoint=function(e,t,i){if(e===this.nextX){this.nextX=e+1;this.connections[e]={connectsTo:t,onBranch:i}}};e.prototype.getColour=function(){return this.onBranch!==null?this.onBranch.getColour():0};e.prototype.setNotCommited=function(){this.isCommitted=false};e.prototype.setCurrent=function(){this.isCurrent=true};e.prototype.draw=function(e,t,i){if(this.onBranch===null)return;var s=e.appendChild(k.createElementNS(d,"circle"));var n=this.isCommitted?t.graphColours[this.onBranch.getColour()%t.graphColours.length]:"#808080";s.setAttribute("cx",(this.x*t.grid.x+t.grid.offsetX).toString());s.setAttribute("cy",(this.y*t.grid.y+t.grid.offsetY+(i?t.grid.expandY:0)).toString());s.setAttribute("r","4");if(this.isCurrent){s.setAttribute("class","current");s.setAttribute("stroke",n)}else{s.setAttribute("fill",n)}};return e}();var ce=function(){function e(e,t){this.svgGroup=null;this.maxWidth=-1;this.vertices=[];this.branches=[];this.availableColours=[];this.config=t;this.svg=k.createElementNS(d,"svg");var i=this.svg.appendChild(k.createElementNS(d,"defs"));var s=i.appendChild(k.createElementNS(d,"linearGradient"));s.setAttribute("id","GraphGradient");this.svgGradientStop1=s.appendChild(k.createElementNS(d,"stop"));this.svgGradientStop1.setAttribute("stop-color","white");this.svgGradientStop2=s.appendChild(k.createElementNS(d,"stop"));this.svgGradientStop2.setAttribute("stop-color","black");var n=i.appendChild(k.createElementNS(d,"mask"));n.setAttribute("id","GraphMask");this.svgMaskRect=n.appendChild(k.createElementNS(d,"rect"));this.svgMaskRect.setAttribute("fill","url(#GraphGradient)");this.setDimensions(0,0);k.getElementById(e).appendChild(this.svg)}e.prototype.loadCommits=function(e,t,i){this.vertices=[];this.branches=[];this.availableColours=[];if(e.length===0)return;var s,n;for(s=0;s<e.length;s++){this.vertices.push(new he(s))}for(s=0;s<e.length;s++){for(n=0;n<e[s].parentHashes.length;n++){if(typeof i[e[s].parentHashes[n]]==="number"){this.vertices[s].addParent(this.vertices[i[e[s].parentHashes[n]]])}}}if(e[0].hash==="*"){this.vertices[0].setCurrent();this.vertices[0].setNotCommited()}else if(t!==null&&typeof i[t]==="number"){this.vertices[i[t]].setCurrent()}while((s=this.findStart())!==-1){this.determinePath(s)}};e.prototype.render=function(e){var t=k.createElementNS(d,"g"),i,s=this.getWidth();t.setAttribute("mask","url(#GraphMask)");for(i=0;i<this.branches.length;i++){this.branches[i].draw(t,this.config,e!==null?e.id:-1)}for(i=0;i<this.vertices.length;i++){this.vertices[i].draw(t,this.config,e!==null&&i>e.id)}if(this.svgGroup!==null)this.svg.removeChild(this.svgGroup);this.svg.appendChild(t);this.svgGroup=t;this.setDimensions(s,this.getHeight(e));this.applyMaxWidth(s)};e.prototype.clear=function(){if(this.svgGroup!==null){this.svg.removeChild(this.svgGroup);this.svgGroup=null;this.setDimensions(0,0)}};e.prototype.getWidth=function(){var e=0,t,i;for(t=0;t<this.vertices.length;t++){i=this.vertices[t].getNextPoint();if(i.x>e)e=i.x}return e*this.config.grid.x};e.prototype.getHeight=function(e){return this.vertices.length*this.config.grid.y+this.config.grid.offsetY-this.config.grid.y/2+(e!==null?this.config.grid.expandY:0)};e.prototype.getVertexColours=function(){var e=[],t;for(t=0;t<this.vertices.length;t++){e[t]=this.vertices[t].getColour()%this.config.graphColours.length}return e};e.prototype.getWidthsAtVertices=function(){var e=[],t;for(t=0;t<this.vertices.length;t++){e[t]=(this.vertices[t].getNextPoint().x+1)*this.config.grid.x-2}return e};e.prototype.limitMaxWidth=function(e){this.maxWidth=e;this.applyMaxWidth(this.getWidth())};e.prototype.setDimensions=function(e,t){this.svg.setAttribute("width",e.toString());this.svg.setAttribute("height",t.toString());this.svgMaskRect.setAttribute("width",e.toString());this.svgMaskRect.setAttribute("height",t.toString())};e.prototype.applyMaxWidth=function(e){var t=this.maxWidth>-1?(this.maxWidth-12)/e:1;var i=this.maxWidth>-1?this.maxWidth/e:1;this.svgGradientStop1.setAttribute("offset",t.toString());this.svgGradientStop2.setAttribute("offset",i.toString())};e.prototype.determinePath=function(e){var t=e;var i=this.vertices[t],s=this.vertices[t].getNextParent(),n;var o=i.isNotOnBranch()?i.getNextPoint():i.getPoint(),a;if(s!==null&&i.isMerge()&&!i.isNotOnBranch()&&!s.isNotOnBranch()){var r=false,l=s.getBranch();for(t=e+1;t<this.vertices.length;t++){n=this.vertices[t];a=n.getPointConnectingTo(s,l);if(a!==null){r=true}else{a=n.getNextPoint()}l.addLine(o,a,i.getIsCommitted(),!r&&n!==s?o.x<a.x:true);n.registerUnavailablePoint(a.x,s,l);o=a;if(r){i.registerParentProcessed();break}}}else{var h=new le(this.getAvailableColour(e));i.addToBranch(h,o.x);i.registerUnavailablePoint(o.x,i,h);for(t=e+1;t<this.vertices.length;t++){n=this.vertices[t];a=s===n&&!s.isNotOnBranch()?n.getPoint():n.getNextPoint();h.addLine(o,a,i.getIsCommitted(),o.x<a.x);n.registerUnavailablePoint(a.x,s,h);o=a;if(s===n){i.registerParentProcessed();var c=!s.isNotOnBranch();s.addToBranch(h,a.x);i=s;s=i.getNextParent();if(c)break}}h.setEnd(t);this.branches.push(h);this.availableColours[h.getColour()]=t}};e.prototype.findStart=function(){for(var e=0;e<this.vertices.length;e++){if(this.vertices[e].getNextParent()!==null||this.vertices[e].isNotOnBranch())return e}return-1};e.prototype.getAvailableColour=function(e){for(var t=0;t<this.availableColours.length;t++){if(e>this.availableColours[t]){return t}}this.availableColours.push(0);return this.availableColours.length-1};return e}();var me=function(){function e(e){var t=this;this.visible=false;this.loading=false;this.repo=null;this.settings=null;this.view=e;this.widgetElem=k.createElement("div");this.widgetElem.className="settingsWidget";this.widgetElem.innerHTML='<h2>Repository Settings</h2><div id="settingsContent"></div><div id="settingsLoading"></div><div id="settingsClose"></div>';k.body.appendChild(this.widgetElem);this.contentsElem=k.getElementById("settingsContent");this.loadingElem=k.getElementById("settingsLoading");var i=k.getElementById("settingsClose");i.innerHTML=R.close;i.addEventListener("click",function(){return t.close()})}e.prototype.show=function(e,t){if(this.visible)return;this.visible=true;this.loading=true;this.repo=e;J(this.widgetElem,I,t);this.widgetElem.classList.add(b);this.requestSettings();this.view.saveState()};e.prototype.refresh=function(){if(!this.visible)return;this.loading=true;this.requestSettings()};e.prototype.close=function(){if(!this.visible)return;this.visible=false;this.loading=false;this.repo=null;this.settings=null;this.widgetElem.classList.add(I);this.widgetElem.classList.remove(b);this.widgetElem.classList.remove(D);this.contentsElem.innerHTML="";this.loadingElem.innerHTML="";this.view.saveState()};e.prototype.getState=function(){return{visible:this.visible,repo:this.repo,settings:this.settings}};e.prototype.restoreState=function(e){if(!e.visible||e.repo===null)return;this.settings=e.settings;this.show(e.repo,false)};e.prototype.isVisible=function(){return this.visible};e.prototype.loadSettings=function(e,t){var i=this;if(!this.visible)return;this.settings=e;if(t===null){this.loading=false;this.render();this.view.saveState()}else{var s="Unable To Load Repository Settings";this.contentsElem.innerHTML="";this.loadingElem.innerHTML="<span>"+s+"</span>";J(this.widgetElem,D,true);Ve(s,t,"Retry",function(){return i.requestSettings()},null)}};e.prototype.render=function(){var i=this;if(this.settings!==null){var s="<h3>Remote Configuration</h3><table><tr><th>Name</th><th>Remote URL</th><th>Type</th><th>Action</th></tr>",n="Leave blank to use the Fetch URL";if(this.settings.remotes.length>0){this.settings.remotes.forEach(function(e,t){s+='<tr class="lineAbove"><td rowspan="2">'+q(e.name)+'</td><td class="remoteUrl">'+q(e.url||"Not Set")+'</td><td>Fetch</td><td class="remoteBtns" rowspan="2" data-index="'+t+'"><div class="fetchRemote" title="Fetch from Remote">'+R.download+'</div> <div class="pruneRemote" title="Prune Remote'+B+'">'+R.branch+'</div><br><div class="editRemote" title="Edit Remote'+B+'">'+R.pencil+'</div> <div class="deleteRemote" title="Delete Remote'+B+'">'+R.close+'</div></td></tr><tr><td class="remoteUrl">'+q(e.pushUrl||e.url||"Not Set")+"</td><td>Push</td></tr>"})}else{s+='<tr class="lineAbove"><td colspan="4">There are no remotes configured for this repository.</td></tr>'}s+='<tr class="lineAbove"><td colspan="4"><div id="settingsAddRemote">'+R.close+"Add Remote</div></td></tr></table>";this.contentsElem.innerHTML=s;k.getElementById("settingsAddRemote").addEventListener("click",function(){Ue("Add a new remote to this repository:",[{type:"text",name:"Name: ",default:"",placeholder:null},{type:"text",name:"Fetch URL: ",default:"",placeholder:null},{type:"text",name:"Push URL: ",default:"",placeholder:n},{type:"checkbox",name:"Fetch Immediately: ",value:true}],"Add Remote",function(e){Se({command:"addRemote",name:e[0],repo:i.repo,url:e[1],pushUrl:e[2]!==""?e[2]:null,fetch:e[3]==="checked"},"Adding Remote")},null)});$("editRemote","click",function(e){var t=i.getRemoteForBtnEvent(e);Ue("Edit the remote <b><i>"+q(t.name)+"</i></b>:",[{type:"text",name:"Name: ",default:t.name,placeholder:null},{type:"text",name:"Fetch URL: ",default:t.url!==null?t.url:"",placeholder:null},{type:"text",name:"Push URL: ",default:t.pushUrl!==null?t.pushUrl:"",placeholder:n}],"Save Changes",function(e){Se({command:"editRemote",repo:i.repo,nameOld:t.name,nameNew:e[0],urlOld:t.url,urlNew:e[1]!==""?e[1]:null,pushUrlOld:t.pushUrl,pushUrlNew:e[2]!==""?e[2]:null},"Saving Changes to Remote")},null)});$("deleteRemote","click",function(e){var t=i.getRemoteForBtnEvent(e);Ie("Are you sure you want to delete the remote <b><i>"+q(t.name)+"</i></b>?",function(){Se({command:"deleteRemote",repo:i.repo,name:t.name},"Deleting Remote")},null)});$("fetchRemote","click",function(e){Se({command:"fetch",repo:i.repo,name:i.getRemoteForBtnEvent(e).name,prune:false},"Fetching from Remote")});$("pruneRemote","click",function(e){var t=i.getRemoteForBtnEvent(e);Ie("Are you sure you want to prune remote-tracking references that no longer exist on the remote <b><i>"+q(t.name)+"</i></b>?",function(){Se({command:"pruneRemote",repo:i.repo,name:t.name},"Pruning Remote")},null)})}J(this.widgetElem,D,this.loading);this.loadingElem.innerHTML=this.loading?"<span>"+R.loading+"Loading ...</span>":""};e.prototype.requestSettings=function(){if(this.repo===null)return;te({command:"getSettings",repo:this.repo});this.render()};e.prototype.getRemoteForBtnEvent=function(e){return this.settings.remotes[parseInt(e.target.closest(".remoteBtns").dataset.index)]};return e}();var de=function(){function e(e,t,i,s,n,o){var a=this;this.gitBranches=[];this.gitBranchHead=null;this.gitRemotes=[];this.commits=[];this.commitHead=null;this.commitLookup={};this.avatars={};this.currentBranches=null;this.moreCommitsAvailable=false;this.expandedCommit=null;this.scrollTop=0;this.renderedGitBranchHead=null;this.loadBranchesCallback=null;this.loadCommitsCallback=null;this.gitRepos=t;this.config=n;this.maxCommits=n.initialLoadCommits;this.graph=new ce("commitGraph",this.config);this.viewElem=e;this.controlsElem=k.getElementById("controls");this.tableElem=k.getElementById("commitTable");this.footerElem=k.getElementById("footer");this.dockedCommitDetailsView=k.getElementById("dockedCommitDetailsView");this.scrollShadowElem=k.getElementById("scrollShadow");this.repoDropdown=new se("repoSelect",true,false,"Repos",function(e){return a.loadRepo(e[0])});this.branchDropdown=new se("branchSelect",false,true,"Branches",function(e){a.currentBranches=e;a.maxCommits=a.config.initialLoadCommits;a.closeCommitDetails(false);a.saveState();a.renderShowLoading();a.requestLoadCommits(true,function(){})});this.showRemoteBranchesElem=k.getElementById("showRemoteBranchesCheckbox");this.showRemoteBranchesElem.addEventListener("change",function(){a.gitRepos[a.currentRepo].showRemoteBranches=a.showRemoteBranchesElem.checked;a.saveRepoState();a.refresh(true)});this.refreshBtnElem=k.getElementById("refreshBtn");this.refreshBtnElem.addEventListener("click",function(){if(!a.refreshBtnElem.classList.contains(A)){a.refresh(true)}});this.renderRefreshButton(true);this.findWidget=new ae(this);this.settingsWidget=new me(this);J(k.body,y,n.branchLabelsAlignedToGraph);J(k.body,M,n.tagLabelsOnRight);this.observeWindowSizeChanges();this.observeWebviewStyleChanges();this.observeWebviewScroll();this.observeKeyboardEvents();this.renderShowLoading();if(o&&typeof this.gitRepos[o.currentRepo]!=="undefined"){this.currentRepo=o.currentRepo;this.currentBranches=o.currentBranches;this.maxCommits=o.maxCommits;this.expandedCommit=o.expandedCommit;this.avatars=o.avatars;this.loadBranches(o.gitBranches,o.gitBranchHead,true,true);this.loadCommits(o.commits,o.commitHead,o.gitRemotes,o.moreCommitsAvailable,true);this.findWidget.restoreState(o.findWidget);this.settingsWidget.restoreState(o.settingsWidget);this.showRemoteBranchesElem.checked=this.gitRepos[o.currentRepo].showRemoteBranches}if(!this.loadRepos(this.gitRepos,i,s)){if(o){this.scrollTop=o.scrollTop;this.viewElem.scroll(0,this.scrollTop)}this.requestLoadBranchesAndCommits(false)}var r=k.getElementById("fetchBtn"),l=k.getElementById("findBtn"),h=k.getElementById("settingsBtn");r.title="Fetch"+(this.config.fetchAndPrune?" & Prune":"")+" from Remote(s)";r.innerHTML=R.download;r.addEventListener("click",function(){Se({command:"fetch",repo:a.currentRepo,name:null,prune:a.config.fetchAndPrune},"Fetching from Remote(s)")});l.innerHTML=R.search;l.addEventListener("click",function(){return a.findWidget.show(true)});h.innerHTML=R.gear;h.addEventListener("click",function(){return a.settingsWidget.show(a.currentRepo,true)})}e.prototype.loadRepos=function(e,t,i){this.gitRepos=e;this.saveState();var s=Object.keys(e),n;if(i!==null&&this.currentRepo!==i&&typeof e[i]!=="undefined"){n=i}else if(typeof e[this.currentRepo]==="undefined"){n=t!==null&&typeof e[t]!=="undefined"?t:s[0]}else{n=this.currentRepo}var o=[],a,r;for(r=0;r<s.length;r++){a=s[r].split("/");o.push({name:a[a.length-1],value:s[r]})}k.getElementById("repoControl").style.display=s.length>1?"inline":"none";this.repoDropdown.setOptions(o,[n]);if(this.currentRepo!==n){this.loadRepo(n);return true}else{return false}};e.prototype.loadRepo=function(e){this.currentRepo=e;this.showRemoteBranchesElem.checked=this.gitRepos[this.currentRepo].showRemoteBranches;this.maxCommits=this.config.initialLoadCommits;this.gitRemotes=[];J(this.controlsElem,T,false);this.closeCommitDetails(false);this.settingsWidget.close();this.currentBranches=null;this.saveState();this.refresh(true)};e.prototype.loadBranches=function(e,t,i,s){if(!s||!i&&O(this.gitBranches,e)&&this.gitBranchHead===t){this.triggerLoadBranchesCallback(false,s);return}this.gitBranches=e;this.gitBranchHead=t;var n=[];for(var o=0;o<this.config.customBranchGlobPatterns.length;o++){n.push(this.config.customBranchGlobPatterns[o].glob)}if(this.currentBranches!==null&&!(this.currentBranches.length===1&&this.currentBranches[0]===u)){var o=0;while(o<this.currentBranches.length){if(e.indexOf(this.currentBranches[o])===-1&&n.indexOf(this.currentBranches[o])===-1){this.currentBranches.splice(o,1)}else{o++}}if(this.currentBranches.length===0)this.currentBranches=null}if(this.currentBranches===null){this.currentBranches=[this.config.showCurrentBranchByDefault&&this.gitBranchHead!==null?this.gitBranchHead:u]}this.saveState();var a=[{name:"Show All",value:u}];for(var o=0;o<this.config.customBranchGlobPatterns.length;o++){a.push({name:"Glob: "+q(this.config.customBranchGlobPatterns[o].name),value:this.config.customBranchGlobPatterns[o].glob})}for(var o=0;o<this.gitBranches.length;o++){a.push({name:this.gitBranches[o].indexOf("remotes/")===0?this.gitBranches[o].substring(8):this.gitBranches[o],value:this.gitBranches[o]})}this.branchDropdown.setOptions(a,this.currentBranches);this.triggerLoadBranchesCallback(true,s)};e.prototype.triggerLoadBranchesCallback=function(e,t){if(this.loadBranchesCallback!==null){this.loadBranchesCallback(e,t);this.loadBranchesCallback=null}};e.prototype.loadCommits=function(e,t,i,s,n){if(!n&&this.moreCommitsAvailable===s&&this.commitHead===t&&G(this.commits,e,function(e,t){return e.hash===t.hash&&O(e.heads,t.heads)&&G(e.tags,t.tags,function(e,t){return e.name===t.name&&e.annotated===t.annotated})&&G(e.remotes,t.remotes,function(e,t){return e.name===t.name&&e.remote===t.remote})&&O(e.parentHashes,t.parentHashes)})&&O(this.gitRemotes,i)&&this.renderedGitBranchHead===this.gitBranchHead){if(this.commits.length>0&&this.commits[0].hash===L){this.commits[0]=e[0];this.saveState();this.renderUncommittedChanges();if(this.expandedCommit!==null&&this.expandedCommit.srcElem!==null){if(this.expandedCommit.compareWithHash===null){if(this.expandedCommit.hash===L){this.requestCommitDetails(this.expandedCommit.hash,true)}}else{if(this.expandedCommit.compareWithSrcElem!==null&&(this.expandedCommit.hash===L||this.expandedCommit.compareWithHash===L)){this.requestCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash,true)}}}}this.triggerLoadCommitsCallback(false);return}this.moreCommitsAvailable=s;this.commits=e;this.commitHead=t;this.gitRemotes=i;this.commitLookup={};this.saveState();var o,a=false,r=false,l={},h;for(o=0;o<this.commits.length;o++){h=this.commits[o];this.commitLookup[h.hash]=o;if(this.expandedCommit!==null){if(this.expandedCommit.hash===h.hash){a=true}else if(this.expandedCommit.compareWithHash===h.hash){r=true}}if(this.config.fetchAvatars&&typeof this.avatars[h.email]!=="string"&&h.email!==""){if(typeof l[h.email]==="undefined"){l[h.email]=[h.hash]}else{l[h.email].push(h.hash)}}}this.graph.loadCommits(this.commits,this.commitHead,this.commitLookup);if(this.expandedCommit!==null&&(!a||this.expandedCommit.compareWithHash!==null&&!r)){this.closeCommitDetails(false);this.saveState()}this.render();this.triggerLoadCommitsCallback(true);this.requestAvatars(l)};e.prototype.triggerLoadCommitsCallback=function(e){if(this.loadCommitsCallback!==null){this.loadCommitsCallback(e);this.loadCommitsCallback=null}};e.prototype.loadDataError=function(e,t){var i=this;this.graph.clear();this.tableElem.innerHTML="";this.footerElem.innerHTML="";this.loadBranchesCallback=null;this.loadCommitsCallback=null;this.renderRefreshButton(true);this.findWidget.update([]);Ve(e,t,"Retry",function(){i.refresh(true)},null)};e.prototype.loadAvatar=function(e,t){this.avatars[e]=t;this.saveState();var i=k.getElementsByClassName("avatar"),s=q(e);for(var n=0;n<i.length;n++){if(i[n].dataset.email===s){i[n].innerHTML='<img class="avatarImg" src="'+t+'">'}}};e.prototype.getNumBranches=function(){return this.gitBranches.length};e.prototype.getSettingsWidget=function(){return this.settingsWidget};e.prototype.refresh=function(e){if(e){if(this.expandedCommit!==null){this.closeCommitDetails(false);this.saveState()}this.renderShowLoading()}this.requestLoadBranchesAndCommits(e)};e.prototype.requestLoadBranches=function(e,t){if(this.loadBranchesCallback!==null)return;this.loadBranchesCallback=t;te({command:"loadBranches",repo:this.currentRepo,showRemoteBranches:this.gitRepos[this.currentRepo].showRemoteBranches,hard:e})};e.prototype.requestLoadCommits=function(e,t){if(this.loadCommitsCallback!==null)return;this.loadCommitsCallback=t;te({command:"loadCommits",repo:this.currentRepo,branches:this.currentBranches===null||this.currentBranches.length===1&&this.currentBranches[0]===u?null:this.currentBranches,maxCommits:this.maxCommits,showRemoteBranches:this.gitRepos[this.currentRepo].showRemoteBranches,hard:e})};e.prototype.requestLoadBranchesAndCommits=function(i){var s=this;this.renderRefreshButton(false);this.requestLoadBranches(i,function(t,e){if(e){s.requestLoadCommits(i,function(e){if(!i&&(t||e)&&xe!==z||xe===U){Oe()}s.renderRefreshButton(true)})}else{if(xe===U)Ge();s.renderRefreshButton(true);te({command:"loadRepos",check:true})}})};e.prototype.requestCommitDetails=function(e,t){te({command:"commitDetails",repo:this.currentRepo,commitHash:e,refresh:t})};e.prototype.requestCommitComparison=function(e,t,i){var s=this.getCommitOrder(e,t);te({command:"compareCommits",repo:this.currentRepo,commitHash:e,compareWithHash:t,fromHash:s.from,toHash:s.to,refresh:i})};e.prototype.requestAvatars=function(e){var t=Object.keys(e),i=this.gitRemotes.length>0?this.gitRemotes.includes("origin")?"origin":this.gitRemotes[0]:null;for(var s=0;s<t.length;s++){te({command:"fetchAvatar",repo:this.currentRepo,remote:i,email:t[s],commits:e[t[s]]})}};e.prototype.saveState=function(){t.setState({gitRepos:this.gitRepos,gitBranches:this.gitBranches,gitBranchHead:this.gitBranchHead,gitRemotes:this.gitRemotes,commits:this.commits,commitHead:this.commitHead,avatars:this.avatars,currentBranches:this.currentBranches,currentRepo:this.currentRepo,moreCommitsAvailable:this.moreCommitsAvailable,maxCommits:this.maxCommits,expandedCommit:this.expandedCommit,scrollTop:this.scrollTop,findWidget:this.findWidget.getState(),settingsWidget:this.settingsWidget.getState()})};e.prototype.saveRepoState=function(){te({command:"saveRepoState",repo:this.currentRepo,state:this.gitRepos[this.currentRepo]})};e.prototype.render=function(){J(this.controlsElem,T,this.gitRemotes.length>0);this.renderTable();this.renderGraph()};e.prototype.renderGraph=function(){var e=k.getElementById("tableColHeaders");if(e===null)return;var t=this.config.commitDetailsViewLocation==="Inline"?this.expandedCommit:null;var i=e.clientHeight+1,s=t!==null?k.getElementById("commitDetails"):null;this.config.grid.expandY=s!==null?s.getBoundingClientRect().height:this.config.grid.expandY;this.config.grid.y=this.commits.length>0?(this.tableElem.children[0].clientHeight-i-(t!==null?this.config.grid.expandY:0))/this.commits.length:this.config.grid.y;this.config.grid.offsetY=i+this.config.grid.y/2;this.graph.render(t)};e.prototype.renderTable=function(){var l=this;var e,t=this.getColumnVisibility(),i=this.commits.length>0&&this.commits[0].hash===L?L:this.commitHead,s=this.graph.getVertexColours(),n=this.config.branchLabelsAlignedToGraph?this.graph.getWidthsAtVertices():[];var o='<tr id="tableColHeaders"><th id="tableHeaderGraphCol" class="tableColHeader" data-col="0">Graph</th><th class="tableColHeader" data-col="1">Description</th>'+(t.date?'<th class="tableColHeader" data-col="2">Date</th>':"")+(t.author?'<th class="tableColHeader authorCol" data-col="3">Author</th>':"")+(t.commit?'<th class="tableColHeader" data-col="4">Commit</th>':"")+"</tr>";for(var a=0;a<this.commits.length;a++){e=this.commits[a];var r="",h="",c=q(K(e.message)),m=Ee(e.date),d=void 0,u=void 0,p=void 0,f=void 0,g=void 0,v=void 0,C=Te(e.heads,e.remotes);for(d=0;d<C.heads.length;d++){p=q(C.heads[d].name);g=C.heads[d].name===this.gitBranchHead;v='<span class="gitRef head'+(g?" active":"")+'" data-name="'+p+'">'+R.branch+'<span class="gitRefName">'+p+"</span>";for(u=0;u<C.heads[d].remotes.length;u++){f=q(C.heads[d].remotes[u]);v+='<span class="gitRefHeadRemote" data-remote="'+f+'">'+f+"</span>"}v+="</span>";r=g?v+r:r+v}for(d=0;d<C.remotes.length;d++){p=q(C.remotes[d].name);r+='<span class="gitRef remote" data-name="'+p+'" data-remote="'+(C.remotes[d].remote!==null?q(C.remotes[d].remote):"")+'">'+R.branch+'<span class="gitRefName">'+p+"</span></span>"}for(d=0;d<e.tags.length;d++){p=q(e.tags[d].name);h+='<span class="gitRef tag" data-name="'+p+'" data-tagtype="'+(e.tags[d].annotated?"annotated":"lightweight")+'">'+R.tag+'<span class="gitRefName">'+p+"</span></span>"}var b=e.hash===this.commitHead?'<span class="commitHeadDot"></span>':"";o+='<tr class="commit'+(e.hash===i?" current":"")+(this.config.muteMergeCommits&&e.parentHashes.length>1?" merge":"")+'"'+(e.hash!==L?"":' id="uncommittedChanges"')+' data-hash="'+e.hash+'" data-id="'+a+'" data-color="'+s[a]+'">'+(this.config.branchLabelsAlignedToGraph?'<td style="padding-left:'+n[a]+'px">'+r+"</td><td>"+b:"<td></td><td>"+b+r)+'<span class="gitRefTags">'+h+'</span><span class="text">'+c+"</span></td>"+(t.date?'<td class="text" title="'+m.title+'">'+m.value+"</td>":"")+(t.author?'<td class="authorCol text" title="'+q(e.author+" <"+e.email+">")+'">'+(this.config.fetchAvatars?'<span class="avatar" data-email="'+q(e.email)+'">'+(typeof this.avatars[e.email]==="string"?'<img class="avatarImg" src="'+this.avatars[e.email]+'">':"")+"</span>":"")+q(e.author)+"</td>":"")+(t.commit?'<td class="text" title="'+q(e.hash)+'">'+Le(e.hash)+"</td>":"")+"</tr>"}this.tableElem.innerHTML="<table>"+o+"</table>";this.footerElem.innerHTML=this.moreCommitsAvailable?'<div id="loadMoreCommitsBtn" class="roundedBtn">Load More Commits</div>':"";this.makeTableResizable();this.findWidget.update(this.commits);this.renderedGitBranchHead=this.gitBranchHead;if(this.moreCommitsAvailable){k.getElementById("loadMoreCommitsBtn").addEventListener("click",function(){l.footerElem.innerHTML='<h2 id="loadingHeader">'+R.loading+"Loading ...</h2>";l.maxCommits+=l.config.loadMoreCommits;l.closeCommitDetails(true);l.saveState();l.requestLoadCommits(true,function(){})})}if(this.expandedCommit!==null){var y=this.expandedCommit,w=null,x=null,E=k.getElementsByClassName("commit");for(var a=0;a<E.length;a++){if(y.hash===E[a].dataset.hash||y.compareWithHash===E[a].dataset.hash){if(y.hash===E[a].dataset.hash){w=E[a]}else{x=E[a]}if(w!==null&&(y.compareWithHash===null||x!==null))break}}if(w===null||y.compareWithHash!==null&&x===null){this.closeCommitDetails(false);this.saveState()}else{y.id=parseInt(w.dataset.id);y.srcElem=w;y.compareWithSrcElem=x;this.saveState();if(y.compareWithHash===null){if(!y.loading&&y.commitDetails!==null&&y.fileTree!==null){this.showCommitDetails(y.commitDetails,y.fileTree,false);if(y.hash===L)this.requestCommitDetails(y.hash,true)}else{this.loadCommitDetails(w)}}else{if(!y.loading&&y.fileChanges!==null&&y.fileTree!==null){this.showCommitComparison(y.hash,y.compareWithHash,y.fileChanges,y.fileTree,false);if(y.hash===L||y.compareWithHash===L)this.requestCommitComparison(y.hash,y.compareWithHash,true)}else{this.loadCommitComparison(x)}}}}$("commit","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".commit");var i=t.dataset.hash,s;if(t.id==="uncommittedChanges"){s=[{title:"Reset uncommitted changes"+B,onClick:function(){We("Are you sure you want to reset the <b>uncommitted changes</b> to <b>HEAD</b>?","mixed",[{name:"Mixed - Keep working tree, but reset index",value:"mixed"},{name:"Hard - Discard all changes",value:"hard"}],"Yes, reset",function(e){Se({command:"resetToCommit",repo:l.currentRepo,commitHash:"HEAD",resetMode:e},"Resetting uncommitted changes")},t)}},{title:"Clean untracked files"+B,onClick:function(){Pe("Are you sure you want to clean all untracked files?","Clean untracked directories",true,"Yes, clean",function(e){Se({command:"cleanUntrackedFiles",repo:l.currentRepo,directories:e},"Cleaning untracked files")},t)}},null,{title:"Open Source Control View",onClick:function(){te({command:"viewScm"})}}]}else{s=[{title:"Add Tag"+B,onClick:function(){Ue("Add tag to commit <b><i>"+Le(i)+"</i></b>:",[{type:"text-ref",name:"Name: ",default:""},{type:"select",name:"Type: ",default:l.config.dialogDefaults.addTag.type,options:[{name:"Annotated",value:"annotated"},{name:"Lightweight",value:"lightweight"}]},{type:"text",name:"Message: ",default:"",placeholder:"Optional"}],"Add Tag",function(e){Se({command:"addTag",repo:l.currentRepo,tagName:e[0],commitHash:i,lightweight:e[1]==="lightweight",message:e[2]},"Adding Tag")},t)}},{title:"Create Branch"+B,onClick:function(){Ue("Create branch at commit <b><i>"+Le(i)+"</i></b>:",[{type:"text-ref",name:"Name: ",default:""},{type:"checkbox",name:"Check out: ",value:l.config.dialogDefaults.createBranch.checkout}],"Create Branch",function(e){Se({command:"createBranch",repo:l.currentRepo,branchName:e[0],commitHash:i,checkout:e[1]==="checked"},"Creating Branch")},t)}},null,{title:"Checkout"+B,onClick:function(){Ie("Are you sure you want to checkout commit <b><i>"+Le(i)+"</i></b>? This will result in a 'detached HEAD' state.",function(){Se({command:"checkoutCommit",repo:l.currentRepo,commitHash:i},"Checking out Commit")},t)}},{title:"Cherry Pick"+B,onClick:function(){if(l.commits[l.commitLookup[i]].parentHashes.length===1){Ie("Are you sure you want to cherry pick commit <b><i>"+Le(i)+"</i></b>?",function(){Se({command:"cherrypickCommit",repo:l.currentRepo,commitHash:i,parentIndex:0},"Cherry picking Commit")},t)}else{var e=l.commits[l.commitLookup[i]].parentHashes.map(function(e,t){return{name:Le(e)+(typeof l.commitLookup[e]==="number"?": "+l.commits[l.commitLookup[e]].message:""),value:(t+1).toString()}});We("Are you sure you want to cherry pick merge commit <b><i>"+Le(i)+"</i></b>? Choose the parent hash on the main branch, to cherry pick the commit relative to:","1",e,"Yes, cherry pick",function(e){Se({command:"cherrypickCommit",repo:l.currentRepo,commitHash:i,parentIndex:parseInt(e)},"Cherry picking Commit")},t)}}},{title:"Revert"+B,onClick:function(){if(l.commits[l.commitLookup[i]].parentHashes.length===1){Ie("Are you sure you want to revert commit <b><i>"+Le(i)+"</i></b>?",function(){Se({command:"revertCommit",repo:l.currentRepo,commitHash:i,parentIndex:0},"Reverting Commit")},t)}else{var e=l.commits[l.commitLookup[i]].parentHashes.map(function(e,t){return{name:Le(e)+(typeof l.commitLookup[e]==="number"?": "+l.commits[l.commitLookup[e]].message:""),value:(t+1).toString()}});We("Are you sure you want to revert merge commit <b><i>"+Le(i)+"</i></b>? Choose the parent hash on the main branch, to revert the commit relative to:","1",e,"Yes, revert",function(e){Se({command:"revertCommit",repo:l.currentRepo,commitHash:i,parentIndex:parseInt(e)},"Reverting Commit")},t)}}},null,{title:"Merge into current branch"+B,onClick:function(){return l.mergeAction(i,Le(i),"Commit",t)}},{title:"Rebase current branch on this Commit"+B,onClick:function(){return l.rebaseAction(i,Le(i),"Commit",t)}},{title:"Reset current branch to this Commit"+B,onClick:function(){We("Are you sure you want to reset the <b>current branch</b> to commit <b><i>"+Le(i)+"</i></b>?","mixed",[{name:"Soft - Keep all changes, but reset head",value:"soft"},{name:"Mixed - Keep working tree, but reset index",value:"mixed"},{name:"Hard - Discard all changes",value:"hard"}],"Yes, reset",function(e){Se({command:"resetToCommit",repo:l.currentRepo,commitHash:i,resetMode:e},"Resetting to Commit")},t)}},null,{title:"Copy Commit Hash to Clipboard",onClick:function(){te({command:"copyToClipboard",type:"Commit Hash",data:i})}}]}De(e,s,t)});$("commit","click",function(e){var t=e.target.closest(".commit");if(l.expandedCommit!==null){if(l.expandedCommit.hash===t.dataset.hash){l.closeCommitDetails(true)}else if(e.ctrlKey||e.metaKey){if(l.expandedCommit.compareWithHash===t.dataset.hash){l.closeCommitComparison(true)}else{l.loadCommitComparison(t)}}else{l.loadCommitDetails(t)}}else{l.loadCommitDetails(t)}});$("gitRef","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".gitRef");var s=j(t.dataset.name),i,n;if(t.classList.contains("tag")){i=[];if(t.dataset.tagtype==="annotated"){i.push({title:"View Details",onClick:function(){var e=t.closest(".commit");Se({command:"tagDetails",repo:l.currentRepo,tagName:s,commitHash:e.dataset.hash},"Retrieving Tag Details")}})}i.push({title:"Delete Tag"+B,onClick:function(){var e="Are you sure you want to delete the tag <b><i>"+q(s)+"</i></b>?";if(l.gitRemotes.length>1){var i=[{name:"Don't delete on any remote",value:"-1"}];l.gitRemotes.forEach(function(e,t){return i.push({name:e,value:t.toString()})});We(e+"<br>Do you also want to delete the tag on a remote:","-1",i,"Yes, delete",function(e){l.deleteTagAction(s,e!=="-1"?l.gitRemotes[parseInt(e)]:null)},null)}else if(l.gitRemotes.length===1){Pe(e,"Also delete on remote",false,"Yes, delete",function(e){l.deleteTagAction(s,e?l.gitRemotes[0]:null)},null)}else{Ie(e,function(){l.deleteTagAction(s,null)},null)}}});if(l.gitRemotes.length>0){i.push({title:"Push Tag"+B,onClick:function(){if(l.gitRemotes.length===1){Ie("Are you sure you want to push the tag <b><i>"+q(s)+"</i></b> to the remote <b><i>"+q(l.gitRemotes[0])+"</i></b>?",function(){Se({command:"pushTag",repo:l.currentRepo,tagName:s,remote:l.gitRemotes[0]},"Pushing Tag")},null)}else if(l.gitRemotes.length>1){var e=l.gitRemotes.map(function(e,t){return{name:e,value:t.toString()}});We("Are you sure you want to push the tag <b><i>"+q(s)+"</i></b>? Select the remote to push the tag to:","0",e,"Yes, push",function(e){Se({command:"pushTag",repo:l.currentRepo,tagName:s,remote:l.gitRemotes[parseInt(e)]},"Pushing Tag")},null)}}})}n="Tag Name"}else{var o=t.classList.contains("head"),a=e.target.className==="gitRefHeadRemote";if(o&&a){s=j(e.target.dataset.remote)+"/"+s;o=false}i=[];if(o){if(l.gitBranchHead!==s){i.push({title:"Checkout Branch",onClick:function(){return l.checkoutBranchAction(s,null,null)}})}i.push({title:"Rename Branch"+B,onClick:function(){Fe("Enter the new name for branch <b><i>"+q(s)+"</i></b>:",s,"Rename Branch",function(e){Se({command:"renameBranch",repo:l.currentRepo,oldName:s,newName:e},"Renaming Branch")},null)}});if(l.gitBranchHead!==s){i.push({title:"Delete Branch"+B,onClick:function(){Pe("Are you sure you want to delete the branch <b><i>"+q(s)+"</i></b>?","Force Delete",false,"Delete Branch",function(e){Se({command:"deleteBranch",repo:l.currentRepo,branchName:s,forceDelete:e},"Deleting Branch")},null)}},{title:"Merge into current branch"+B,onClick:function(){return l.mergeAction(s,s,"Branch",null)}},{title:"Rebase current branch on Branch"+B,onClick:function(){return l.rebaseAction(s,s,"Branch",null)}})}if(l.gitRemotes.length>0){i.push({title:"Push Branch"+B,onClick:function(){if(l.gitRemotes.length===1){Ue("Are you sure you want to push the branch <b><i>"+q(s)+"</i></b> to the remote <b><i>"+q(l.gitRemotes[0])+"</i></b>?",[{type:"checkbox",name:"Set Upstream",value:true},{type:"checkbox",name:"Force Push",value:false}],"Yes, push",function(e){Se({command:"pushBranch",repo:l.currentRepo,branchName:s,remote:l.gitRemotes[0],setUpstream:e[0]==="checked",force:e[1]==="checked"},"Pushing Branch")},null)}else if(l.gitRemotes.length>1){var e=l.gitRemotes.map(function(e,t){return{name:e,value:t.toString()}});Ue("Are you sure you want to push the branch <b><i>"+q(s)+"</i></b>?",[{type:"select",name:"Push to Remote: ",default:"0",options:e},{type:"checkbox",name:"Set Upstream: ",value:true},{type:"checkbox",name:"Force Push: ",value:false}],"Yes, push",function(e){Se({command:"pushBranch",repo:l.currentRepo,branchName:s,remote:l.gitRemotes[parseInt(e[0])],setUpstream:e[1]==="checked",force:e[2]==="checked"},"Pushing Branch")},null)}}})}}else{var r=j((a?e.target:t).dataset.remote);i.push({title:"Checkout Branch"+B,onClick:function(){return l.checkoutBranchAction(s,r,null)}});if(r!==""){i.push({title:"Delete Remote Branch"+B,onClick:function(){Ie("Are you sure you want to delete the remote branch <b><i>"+q(s)+"</i></b>?",function(){Se({command:"deleteRemoteBranch",repo:l.currentRepo,branchName:s.substr(r.length+1),remote:r},"Deleting Remote Branch")},null)}},{title:"Pull into current branch"+B,onClick:function(){Ue("Are you sure you want to pull branch <b><i>"+q(s)+"</i></b> into the current branch? If a merge is required:",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:false},{type:"checkbox",name:"Squash commits",value:false}],"Yes, pull",function(e){Se({command:"pullBranch",repo:l.currentRepo,branchName:s.substr(r.length+1),remote:r,createNewCommit:e[0]==="checked",squash:e[1]==="checked"},"Pulling Branch")},null)}})}}n="Branch Name"}i.push(null,{title:"Copy "+n+" to Clipboard",onClick:function(){te({command:"copyToClipboard",type:n,data:s})}});De(e,i,t)});$("gitRef","click",function(e){return e.stopPropagation()});$("gitRef","dblclick",function(e){e.stopPropagation();Oe();var t=e.target.closest(".gitRef");if(!t.classList.contains("tag")){var i=j(t.dataset.name),s=t.classList.contains("head"),n=e.target.className==="gitRefHeadRemote";if(s&&n){i=j(e.target.dataset.remote)+"/"+i;s=false}l.checkoutBranchAction(i,s?null:j((n?e.target:t).dataset.remote),null)}})};e.prototype.renderUncommittedChanges=function(){var e=this.getColumnVisibility(),t=Ee(this.commits[0].date);k.getElementById("uncommittedChanges").innerHTML="<td></td><td><b>"+q(this.commits[0].message)+"</b></td>"+(e.date?'<td title="'+t.title+'">'+t.value+"</td>":"")+(e.author?'<td title="* <>">*</td>':"")+(e.commit?'<td title="*">*</td>':"")};e.prototype.renderShowLoading=function(){Oe();this.graph.clear();this.tableElem.innerHTML='<h2 id="loadingHeader">'+R.loading+"Loading ...</h2>";this.footerElem.innerHTML="";this.findWidget.update([])};e.prototype.renderRefreshButton=function(e){this.refreshBtnElem.title=e?"Refresh":"Refreshing";this.refreshBtnElem.innerHTML=e?R.refresh:R.loading;J(this.refreshBtnElem,A,!e)};e.prototype.checkoutBranchAction=function(t,i,e){var s=this;if(i!==null){Fe("Enter the name of the new branch you would like to create when checking out <b><i>"+q(t)+"</i></b>:",e!==null?e:i!==""?t.substr(i.length+1):t,"Checkout Branch",function(e){if(s.gitBranches.includes(e)){Ne("The name <b><i>"+q(e)+"</i></b> is already used by another branch:","Choose another branch name",function(){s.checkoutBranchAction(t,i,e)},"Check out the existing branch",function(){s.checkoutBranchAction(e,null,null)},null)}else{Se({command:"checkoutBranch",repo:s.currentRepo,branchName:e,remoteBranch:t},"Checking out Branch")}},null)}else{Se({command:"checkoutBranch",repo:this.currentRepo,branchName:t,remoteBranch:null},"Checking out Branch")}};e.prototype.deleteTagAction=function(e,t){Se({command:"deleteTag",repo:this.currentRepo,tagName:e,deleteOnRemote:t},"Deleting Tag")};e.prototype.mergeAction=function(t,e,i,s){var n=this;Ue("Are you sure you want to merge "+i.toLowerCase()+" <b><i>"+q(e)+"</i></b> into the current branch?",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:this.config.dialogDefaults.merge.noFastForward},{type:"checkbox",name:"Squash commits",value:this.config.dialogDefaults.merge.squash}],"Yes, merge",function(e){Se({command:"merge",repo:n.currentRepo,obj:t,type:i,createNewCommit:e[0]==="checked",squash:e[1]==="checked"},"Merging "+i)},s)};e.prototype.rebaseAction=function(i,e,s,t){var n=this;Ue("Are you sure you want to rebase the current branch on "+s.toLowerCase()+" <b><i>"+q(e)+"</i></b>?",[{type:"checkbox",name:"Launch Interactive Rebase in new Terminal",value:this.config.dialogDefaults.rebase.interactive},{type:"checkbox",name:"Ignore Date (non-interactive rebase only)",value:this.config.dialogDefaults.rebase.ignoreDate}],"Yes, rebase",function(e){var t=e[0]==="checked";Se({command:"rebase",repo:n.currentRepo,obj:i,type:s,ignoreDate:e[1]==="checked",interactive:t},t?"Launching Interactive Rebase":"Rebasing on "+s)},t)};e.prototype.makeTableResizable=function(){var o=this;var n=k.getElementById("tableColHeaders"),a=k.getElementsByClassName("tableColHeader");var r,l=-1,h=-1,c=-1;var m=function(){a[0].style.width=r[0]+"px";a[0].style.padding="";for(var e=2;e<a.length;e++){a[e].style.width=r[parseInt(a[e].dataset.col)]+"px"}o.tableElem.className="fixedLayout";o.graph.limitMaxWidth(r[0]+16)};for(var e=0;e<a.length;e++){var t=parseInt(a[e].dataset.col);a[e].innerHTML+=(e>0?'<span class="resizeCol left" data-col="'+(t-1)+'"></span>':"")+(e<a.length-1?'<span class="resizeCol right" data-col="'+t+'"></span>':"")}var i=this.gitRepos[this.currentRepo].columnWidths;if(i===null){var s=this.config.defaultColumnVisibility;r=[g,g,s.date?g:f,s.author?g:f,s.commit?g:f];this.saveColumnWidths(r)}else{r=[i[0],g,i[1],i[2],i[3]]}if(r[0]!==g){m()}else{this.tableElem.className="autoLayout";this.graph.limitMaxWidth(-1);a[0].style.padding="0 "+Math.round((Math.max(this.graph.getWidth()+16,64)-(a[0].offsetWidth-C))/2)+"px"}$("resizeCol","mousedown",function(e){h=parseInt(e.target.dataset.col);while(r[h]===f)h--;l=e.clientX;var t=r[0]===g;for(var i=0;i<a.length;i++){var s=parseInt(a[i].dataset.col);if(t&&s!==1)r[s]=a[i].clientWidth-C;if(s===h)c=i}if(t)m();n.classList.add("resizing")});n.addEventListener("mousemove",function(e){if(h>-1){var t=e;var i=t.clientX-l;if(h===0){if(r[0]+i<v)i=-r[0]+v;if(a[1].clientWidth-C-i<v)i=a[1].clientWidth-C-v;r[0]+=i;a[0].style.width=r[0]+"px";o.graph.limitMaxWidth(r[0]+16)}else{var s=h!==1?r[h]:a[1].clientWidth-C;var n=h+1;while(r[n]===f)n++;if(s+i<v)i=-s+v;if(r[n]-i<v)i=r[n]-v;if(h!==1){r[h]+=i;a[c].style.width=r[h]+"px"}r[n]-=i;a[c+1].style.width=r[n]+"px"}l=t.clientX}});var d=function(){if(h>-1){h=-1;c=-1;l=-1;n.classList.remove("resizing");o.saveColumnWidths(r)}};n.addEventListener("mouseup",d);n.addEventListener("mouseleave",d);n.addEventListener("contextmenu",function(e){e.stopPropagation();var t=function(e,t){r[e]=r[e]!==f?f:r[0]===g?g:t-C;o.saveColumnWidths(r);Me();o.render()};Ae(e,[{title:"Date",checked:r[2]!==f,onClick:function(){return t(2,128)}},{title:"Author",checked:r[3]!==f,onClick:function(){return t(3,128)}},{title:"Commit",checked:r[4]!==f,onClick:function(){return t(4,80)}}],null)})};e.prototype.saveColumnWidths=function(e){this.gitRepos[this.currentRepo].columnWidths=[e[0],e[2],e[3],e[4]];this.saveRepoState()};e.prototype.getColumnVisibility=function(){var e=this.gitRepos[this.currentRepo].columnWidths;if(e!==null){return{date:e[1]!==f,author:e[2]!==f,commit:e[3]!==f}}else{var t=this.config.defaultColumnVisibility;return{date:t.date,author:t.author,commit:t.commit}}};e.prototype.getNumColumns=function(){var e=this.getColumnVisibility();return 2+(e.date?1:0)+(e.author?1:0)+(e.commit?1:0)};e.prototype.scrollToCommit=function(e,t){var i=k.getElementsByClassName("commit");for(var s=0;s<i.length;s++){if(i[s].dataset.hash===e){var n=this.controlsElem.clientHeight+i[s].offsetTop;if(t||n-8<this.viewElem.scrollTop||n+32-this.viewElem.clientHeight>this.viewElem.scrollTop){this.viewElem.scroll(0,this.controlsElem.clientHeight+i[s].offsetTop+12-this.viewElem.clientHeight/2)}break}}};e.prototype.observeWindowSizeChanges=function(){var e=this;var t=a.outerWidth,i=a.outerHeight;a.addEventListener("resize",function(){if(t===a.outerWidth&&i===a.outerHeight){e.renderGraph()}else{t=a.outerWidth;i=a.outerHeight}})};e.prototype.observeWebviewStyleChanges=function(){var s=this;var n=ie(N),o=ie(F),a=ie(P);this.findWidget.setColour(a);new MutationObserver(function(){var e=ie(N),t=ie(F),i=ie(P);if(e!==n||t!==o){n=e;o=t;s.repoDropdown.refresh();s.branchDropdown.refresh()}if(i!==a){a=i;s.findWidget.setColour(a)}}).observe(k.documentElement,{attributes:true,attributeFilter:["style"]})};e.prototype.observeWebviewScroll=function(){var t=this;var i=this.viewElem.scrollTop>0,s=null;this.scrollShadowElem.className=i?b:"";this.viewElem.addEventListener("scroll",function(){var e=t.viewElem.scrollTop;if(i!==e>0){i=e>0;t.scrollShadowElem.className=i?b:""}if(s!==null)clearTimeout(s);s=setTimeout(function(){t.scrollTop=e;t.saveState();s=null},250)})};e.prototype.observeKeyboardEvents=function(){var a=this;k.addEventListener("keydown",function(e){if(pe){if(e.key==="r"&&(e.ctrlKey||e.metaKey)){a.refresh(true)}else if(e.key==="f"&&(e.ctrlKey||e.metaKey)){a.findWidget.show(true)}else if(e.key==="Escape"&&a.settingsWidget.isVisible()){a.settingsWidget.close()}else if(e.key==="Escape"&&a.findWidget.isVisible()){a.findWidget.close()}else if(a.expandedCommit!==null){if(e.key==="Escape"){a.closeCommitDetails(true)}else if(e.key==="ArrowUp"||e.key==="ArrowDown"){var t=a.commitLookup[a.expandedCommit.hash],i=-1;if(e.key==="ArrowUp"&&t>0){i=t-1}else if(e.key==="ArrowDown"&&t<a.commits.length-1){i=t+1}if(i>-1){e.preventDefault();var s=a.commits[i].hash,n=k.getElementsByClassName("commit");for(var o=0;o<n.length;o++){if(s===n[o].dataset.hash){a.loadCommitDetails(n[o]);break}}}}}}else{if(e.key==="Escape"){Oe()}else if(e.key==="Enter"&&we!==null){we()}}})};e.prototype.loadCommitDetails=function(e){this.closeCommitDetails(true);this.expandedCommit={id:parseInt(e.dataset.id),hash:e.dataset.hash,srcElem:e,commitDetails:null,fileChanges:null,fileTree:null,compareWithHash:null,compareWithSrcElem:null,loading:true,fileChangesScrollTop:0};this.saveState();e.classList.add(w);this.renderCommitDetailsView(false);this.requestCommitDetails(this.expandedCommit.hash,false)};e.prototype.closeCommitDetails=function(e){if(this.expandedCommit!==null){if(this.config.commitDetailsViewLocation==="Inline"){var t=k.getElementById("commitDetails");if(typeof t==="object"&&t!==null)t.remove()}else{k.body.classList.remove(H);this.dockedCommitDetailsView.innerHTML=""}if(typeof this.expandedCommit.srcElem==="object"&&this.expandedCommit.srcElem!==null)this.expandedCommit.srcElem.classList.remove(w);if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(w);this.expandedCommit=null;if(e){this.saveState();if(this.config.commitDetailsViewLocation==="Inline")this.renderGraph()}}};e.prototype.showCommitDetails=function(e,t,i){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.hash!==e.hash)return;var s=k.getElementById("commitDetails");if(typeof s==="object"&&s!==null)s.remove();this.expandedCommit.commitDetails=e;if(Be(this.expandedCommit.fileChanges,e.fileChanges)){this.expandedCommit.fileChanges=e.fileChanges;this.expandedCommit.fileTree=t}this.expandedCommit.srcElem.classList.add(w);this.expandedCommit.loading=false;this.saveState();this.renderCommitDetailsView(i)};e.prototype.createFileTree=function(e){var t={},i,s,n,o,a;var r={type:"folder",name:"",folderPath:"",contents:t,open:true};for(i=0;i<e.length;i++){a=r;n=e[i].newFilePath.split("/");o=this.currentRepo;for(s=0;s<n.length;s++){o+="/"+n[s];if(typeof this.gitRepos[o]!=="undefined"){if(typeof a.contents[n[s]]==="undefined"){a.contents[n[s]]={type:"repo",name:n[s],path:o}}break}else if(s<n.length-1){if(typeof a.contents[n[s]]==="undefined"){t={};a.contents[n[s]]={type:"folder",name:n[s],folderPath:o.substring(this.currentRepo.length+1),contents:t,open:true}}a=a.contents[n[s]]}else if(n[s]!==""){a.contents[n[s]]={type:"file",name:n[s],index:i}}}}return r};e.prototype.loadCommitComparison=function(e){if(this.expandedCommit!==null&&this.expandedCommit.srcElem!==null){this.closeCommitComparison(false);this.expandedCommit.compareWithHash=e.dataset.hash;this.expandedCommit.compareWithSrcElem=e;this.expandedCommit.loading=true;this.expandedCommit.fileChangesScrollTop=0;this.saveState();this.expandedCommit.srcElem.classList.add(w);this.expandedCommit.compareWithSrcElem.classList.add(w);this.renderCommitDetailsView(false);this.requestCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash,false)}};e.prototype.closeCommitComparison=function(e){if(this.expandedCommit!==null&&this.expandedCommit.compareWithHash){if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(w);this.expandedCommit.compareWithHash=null;this.expandedCommit.compareWithSrcElem=null;this.expandedCommit.fileChanges=null;this.expandedCommit.fileTree=null;if(e){this.expandedCommit.loading=true;this.expandedCommit.fileChangesScrollTop=0;this.renderCommitDetailsView(false);this.requestCommitDetails(this.expandedCommit.hash,false)}this.saveState()}};e.prototype.showCommitComparison=function(e,t,i,s,n){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.compareWithSrcElem===null||this.expandedCommit.hash!==e||this.expandedCommit.compareWithHash!==t)return;this.expandedCommit.commitDetails=null;if(Be(this.expandedCommit.fileChanges,i)){this.expandedCommit.fileChanges=i;this.expandedCommit.fileTree=s}this.expandedCommit.srcElem.classList.add(w);this.expandedCommit.compareWithSrcElem.classList.add(w);this.expandedCommit.loading=false;this.saveState();this.renderCommitDetailsView(n)};e.prototype.renderCommitDetailsView=function(e){var n=this;if(this.expandedCommit===null)return;var o=this.expandedCommit;if(o.srcElem===null)return;var t=this.config.commitDetailsViewLocation!=="Inline";var i=t?this.dockedCommitDetailsView:k.getElementById("commitDetails"),s="";if(i===null){i=k.createElement("tr");i.id="commitDetails";Z(i,o.srcElem)}if(o.loading){s+='<div id="commitDetailsLoading">'+R.loading+" Loading "+(o.compareWithHash===null?o.hash!==L?"Commit Details":"Uncommitted Changes":"Commit Comparison")+" ...</div>";if(o.compareWithHash===null)this.renderGraph()}else{s+='<div id="commitDetailsSummary">';if(o.compareWithHash===null){if(o.hash!==L){var a=o.commitDetails;s+='<span class="commitDetailsSummaryTop'+(typeof this.avatars[a.email]==="string"?" withAvatar":"")+'"><span class="commitDetailsSummaryTopRow"><span class="commitDetailsSummaryKeyValues">';s+="<b>Commit: </b>"+q(a.hash)+"<br>";s+="<b>Parents: </b>"+a.parents.join(", ")+"<br>";s+="<b>Author: </b>"+q(a.author)+' &lt;<a href="mailto:'+encodeURIComponent(a.email)+'">'+q(a.email)+"</a>&gt;<br>";s+="<b>Date: </b>"+new Date(a.date*1e3).toString()+"<br>";s+="<b>Committer: </b>"+q(a.committer)+"</span>";if(typeof this.avatars[a.email]==="string")s+='<span class="commitDetailsSummaryAvatar"><img src="'+this.avatars[a.email]+'"></span>';s+="</span></span><br><br>";s+=X(a.body).replace(/\n/g,"<br>")}else{s+="Displaying all uncommitted changes."}this.renderGraph()}else{var r=this.getCommitOrder(o.hash,o.compareWithHash);s+="Displaying all changes from <b>"+r.from+"</b> to <b>"+(r.to!==L?r.to:"Uncommitted Changes")+"</b>."}s+='</div><div id="commitDetailsFiles">'+ke(o.fileTree,o.fileChanges)+"</div>"}s+='<div id="commitDetailsClose" title="Close">'+R.close+"</div>";i.innerHTML=t?s:'<td></td><td colspan="'+(this.getNumColumns()-1)+'">'+s+"</td>";if(t)k.body.classList.add(H);if(!e){if(t){var l=this.controlsElem.clientHeight+o.srcElem.offsetTop;if(l-8<this.viewElem.scrollTop){this.viewElem.scroll(0,l-8)}else if(l-this.viewElem.clientHeight+32>this.viewElem.scrollTop){this.viewElem.scroll(0,l-this.viewElem.clientHeight+32)}}else{var l=this.controlsElem.clientHeight+i.offsetTop;if(this.config.autoCenterCommitDetailsView){this.viewElem.scroll(0,l-12+(this.config.grid.expandY-this.viewElem.clientHeight)/2)}else if(l-32<this.viewElem.scrollTop){this.viewElem.scroll(0,l-32)}else if(l+this.config.grid.expandY-this.viewElem.clientHeight+8>this.viewElem.scrollTop){this.viewElem.scroll(0,l+this.config.grid.expandY-this.viewElem.clientHeight+8)}}}k.getElementById("commitDetailsClose").addEventListener("click",function(){n.closeCommitDetails(true)});$("fileTreeFolder","click",function(e){var t=e.target.closest(".fileTreeFolder");var i=t.parentElement;i.classList.toggle("closed");var s=!i.classList.contains("closed");i.children[0].children[0].innerHTML=s?R.openFolder:R.closedFolder;i.children[1].classList.toggle("hidden");Re(o.fileTree,decodeURIComponent(t.dataset.folderpath),s);n.saveState()});$("fileTreeFile","click",function(e){var t=e.target.closest(".fileTreeFile");if(!t.classList.contains("gitDiffPossible"))return;var i=n.getCommitOrder(o.hash,o.compareWithHash===null?o.hash:o.compareWithHash);te({command:"viewDiff",repo:n.currentRepo,fromHash:i.from,toHash:i.to,oldFilePath:decodeURIComponent(t.dataset.oldfilepath),newFilePath:decodeURIComponent(t.dataset.newfilepath),type:t.dataset.type})});$("fileTreeRepo","click",function(e){n.loadRepos(n.gitRepos,null,decodeURIComponent(e.target.closest(".fileTreeRepo").dataset.path))});$("copyGitFile","click",function(e){var t=e.target.closest(".copyGitFile");te({command:"copyFilePath",repo:n.currentRepo,filePath:decodeURIComponent(t.dataset.filepath)})});$("openGitFile","click",function(e){var t=e.target.closest(".openGitFile");te({command:"openFile",repo:n.currentRepo,filePath:decodeURIComponent(t.dataset.filepath)})});if(!o.loading){var h=k.getElementById("commitDetailsFiles"),c=null;h.scroll(0,o.fileChangesScrollTop);h.addEventListener("scroll",function(){o.fileChangesScrollTop=h.scrollTop;if(c!==null)clearTimeout(c);c=setTimeout(function(){n.saveState();c=null},250)})}};e.prototype.getCommitOrder=function(e,t){if(this.commitLookup[e]>this.commitLookup[t]){return{from:e,to:t}}else{return{from:t,to:e}}};return e}();var ue=k.getElementById("view"),pe=true,fe=false;var ge=k.getElementById("contextMenu"),ve=null;var Ce=k.getElementById("dialog"),be=k.getElementById("dialogBacking"),ye=null,we=null,xe=null;a.addEventListener("load",function(){if(fe)return;fe=true;e(viewState.customEmojiShortcodeMappings);var i=new de(ue,viewState.repos,viewState.lastActiveRepo,viewState.loadRepo,{autoCenterCommitDetailsView:viewState.autoCenterCommitDetailsView,branchLabelsAlignedToGraph:viewState.refLabelAlignment==="Branches (aligned to the graph) & Tags (on the right)",combineLocalAndRemoteBranchLabels:viewState.combineLocalAndRemoteBranchLabels,commitDetailsViewLocation:viewState.commitDetailsViewLocation,customBranchGlobPatterns:viewState.customBranchGlobPatterns,defaultColumnVisibility:viewState.defaultColumnVisibility,dialogDefaults:viewState.dialogDefaults,fetchAndPrune:viewState.fetchAndPrune,fetchAvatars:viewState.fetchAvatars,graphColours:viewState.graphColours,graphStyle:viewState.graphStyle,grid:{x:16,y:24,offsetX:8,offsetY:12,expandY:250},initialLoadCommits:viewState.initialLoadCommits,loadMoreCommits:viewState.loadMoreCommits,muteMergeCommits:viewState.muteMergeCommits,showCurrentBranchByDefault:viewState.showCurrentBranchByDefault,tagLabelsOnRight:viewState.refLabelAlignment!=="Normal"},t.getState());var s=i.getSettingsWidget();a.addEventListener("message",function(e){var t=e.data;switch(t.command){case"addRemote":n(t.error,"Unable to Add Remote");if(s.isVisible())s.refresh();break;case"addTag":n(t.error,"Unable to Add Tag");break;case"checkoutBranch":n(t.error,"Unable to Checkout Branch");break;case"checkoutCommit":n(t.error,"Unable to Checkout Commit");break;case"cherrypickCommit":n(t.error,"Unable to Cherry Pick Commit");break;case"cleanUntrackedFiles":n(t.error,"Unable to Clean Untracked Files");break;case"commitDetails":if(t.commitDetails.error===null){i.showCommitDetails(t.commitDetails,i.createFileTree(t.commitDetails.fileChanges),t.refresh)}else{i.closeCommitDetails(true);Ve("Unable to load Commit Details",t.commitDetails.error,null,null,null)}break;case"compareCommits":if(t.error===null){i.showCommitComparison(t.commitHash,t.compareWithHash,t.fileChanges,i.createFileTree(t.fileChanges),t.refresh)}else{i.closeCommitComparison(true);Ve("Unable to compare Commits",t.error,null,null,null)}break;case"copyFilePath":o(t.success,"Unable to Copy File Path to the Clipboard");break;case"copyToClipboard":o(t.success,"Unable to Copy "+t.type+" to Clipboard");break;case"createBranch":n(t.error,"Unable to Create Branch");break;case"deleteBranch":n(t.error,"Unable to Delete Branch");break;case"deleteRemote":n(t.error,"Unable to Delete Remote");if(s.isVisible())s.refresh();break;case"deleteRemoteBranch":n(t.error,"Unable to Delete Remote Branch");break;case"deleteTag":n(t.error,"Unable to Delete Tag");break;case"editRemote":n(t.error,"Unable to Save Changes to Remote");if(s.isVisible())s.refresh();break;case"fetch":n(t.error,"Unable to Fetch from Remote(s)");break;case"fetchAvatar":i.loadAvatar(t.email,t.image);break;case"getSettings":s.loadSettings(t.settings,t.error);break;case"loadBranches":if(t.error===null){i.loadBranches(t.branches,t.head,t.hard,t.isRepo)}else{i.loadDataError("Unable to load branches",t.error)}break;case"loadCommits":if(t.error===null){i.loadCommits(t.commits,t.head,t.remotes,t.moreCommitsAvailable,t.hard)}else{if(i.getNumBranches()===0&&t.error.indexOf("ambiguous argument 'HEAD': unknown revision")>-1)t.error="There are no commits in this repository.";i.loadDataError("Unable to load commits",t.error)}break;case"loadRepos":i.loadRepos(t.repos,t.lastActiveRepo,t.loadRepo);break;case"merge":n(t.error,"Unable to Merge "+t.type);break;case"openFile":if(t.error!==null){Ve("Unable to Open File",t.error,null,null,null)}break;case"pruneRemote":n(t.error,"Unable to Prune Remote");break;case"pullBranch":n(t.error,"Unable to Pull Branch");break;case"pushBranch":n(t.error,"Unable to Push Branch");break;case"pushTag":n(t.error,"Unable to Push Tag");break;case"rebase":if(t.error===null){if(t.interactive){if(xe===U)Ge()}else{i.refresh(false)}}else{Ve("Unable to Rebase current branch on "+t.type,t.error,null,null,null)}break;case"refresh":i.refresh(false);break;case"renameBranch":n(t.error,"Unable to Rename Branch");break;case"resetToCommit":n(t.error,"Unable to Reset to Commit");break;case"revertCommit":n(t.error,"Unable to Revert Commit");break;case"tagDetails":if(t.error===null){He(t.tagName,t.tagHash,t.commitHash,t.name,t.email,t.date,t.message)}else{Ve("Unable to retrieve Tag Details",t.error,null,null,null)}break;case"viewDiff":o(t.success,"Unable to View Diff of File");break;case"viewScm":o(t.success,"Unable to open the Source Control View");break}});function n(e,t){if(e===null){i.refresh(false)}else{Ve(t,e,null,null,null)}}function o(e,t){if(e){if(xe===U)Ge()}else{Ve(t,null,null,null,null)}}});function Ee(e){var t=new Date(e*1e3),i;var s=t.getDate()+" "+r[t.getMonth()]+" "+t.getFullYear();var n=_(t.getHours())+":"+_(t.getMinutes());switch(viewState.dateFormat){case"Date Only":i=s;break;case"Relative":var o=Math.round((new Date).getTime()/1e3)-e,a=void 0;if(o<60){a="second"}else if(o<3600){a="minute";o/=60}else if(o<86400){a="hour";o/=3600}else if(o<604800){a="day";o/=86400}else if(o<2629800){a="week";o/=604800}else if(o<31557600){a="month";o/=2629800}else{a="year";o/=31557600}o=Math.round(o);i=o+" "+a+(o!==1?"s":"")+" ago";break;default:i=s+" "+n}return{title:s+" "+n,value:i}}function ke(i,e){var t=(i.name!==""?'<span class="fileTreeFolder" data-folderpath="'+encodeURIComponent(i.folderPath)+'"><span class="fileTreeFolderIcon">'+(i.open?R.openFolder:R.closedFolder)+'</span><span class="gitFolderName">'+q(i.name)+"</span></span>":"")+'<ul class="fileTreeFolderContents'+(!i.open?" hidden":"")+'">',s=Object.keys(i.contents),n,o,a,r,l,h;s.sort(function(e,t){return i.contents[e].type!=="file"&&i.contents[t].type==="file"?-1:i.contents[e].type==="file"&&i.contents[t].type!=="file"?1:i.contents[e].name<i.contents[t].name?-1:i.contents[e].name>i.contents[t].name?1:0});for(n=0;n<s.length;n++){if(i.contents[s[n]].type==="folder"){a=i.contents[s[n]];t+="<li"+(!a.open?' class="closed"':"")+">"+ke(a,e)+"</li>"}else if(i.contents[s[n]].type==="file"){o=e[i.contents[s[n]].index];l=o.additions!==null&&o.deletions!==null;h=o.type==="U"||l;t+='<li><span class="fileTreeFileRecord"><span class="fileTreeFile '+o.type+(h?" gitDiffPossible":"")+'" data-oldfilepath="'+encodeURIComponent(o.oldFilePath)+'" data-newfilepath="'+encodeURIComponent(o.newFilePath)+'" data-type="'+o.type+'" title="'+(h?"Click to View Diff":"Unable to View Diff"+(o.type!=="D"?" (this is a binary file)":""))+" • "+c[o.type]+(o.type==="R"?" ("+q(o.oldFilePath)+" → "+q(o.newFilePath)+")":"")+'"><span class="fileTreeFileIcon">'+R.file+"</span>"+q(i.contents[s[n]].name)+"</span>"+(o.type!=="A"&&o.type!=="U"&&o.type!=="D"&&l?'<span class="fileTreeFileAddDel">(<span class="fileTreeFileAdd" title="'+o.additions+" addition"+(o.additions!==1?"s":"")+'">+'+o.additions+'</span>|<span class="fileTreeFileDel" title="'+o.deletions+" deletion"+(o.deletions!==1?"s":"")+'">-'+o.deletions+"</span>)</span>":"")+'<span class="copyGitFile fileTreeFileAction" title="Copy File Path to the Clipboard" data-filepath="'+encodeURIComponent(o.newFilePath)+'">'+R.copy+"</span>"+(o.type!=="D"?'<span class="openGitFile fileTreeFileAction" title="Click to Open File" data-filepath="'+encodeURIComponent(o.newFilePath)+'">'+R.openFile+"</span>":"")+"</span></li>"}else{r=i.contents[s[n]];t+='<li><span class="fileTreeRepo" data-path="'+encodeURIComponent(r.path)+'" title="Click to View Repository"><span class="fileTreeRepoIcon">'+R.closedFolder+"</span>"+q(r.name)+"</span></li>"}}return t+"</ul>"}function Re(e,t,i){var s=t.split("/"),n,o=e;for(n=0;n<s.length;n++){if(typeof o.contents[s[n]]!=="undefined"){o=o.contents[s[n]];if(n===s.length-1){o.open=i;return}}else{return}}}function Be(e,t){if(e===null!==(t===null)){return true}else if(e===null&&t===null){return false}else{return!G(e,t,function(e,t){return e.additions===t.additions&&e.deletions===t.deletions&&e.newFilePath===t.newFilePath&&e.oldFilePath===t.oldFilePath&&e.type===t.type})}}function Le(e){return e.substring(0,8)}function Se(e,t){ze(U,'<span id="actionRunning">'+R.loading+t+" ...</span>",null,"Dismiss",null,null,null);te(e)}function He(e,t,i,s,n,o,a){var r="Tag <b><i>"+q(e)+'</i></b><br><span class="messageContent">';r+="<b>Object: </b>"+q(t)+"<br>";r+="<b>Commit: </b>"+q(i)+"<br>";r+="<b>Tagger: </b>"+q(s)+' &lt;<a href="mailto:'+encodeURIComponent(n)+'">'+q(n)+"</a>&gt;<br>";r+="<b>Date: </b>"+new Date(o*1e3).toString()+"<br><br>";r+=X(a).replace(/\n/g,"<br>")+"</span>";ze(z,r,null,"Close",null,null,null)}function Te(e,t){var i=[],s={},n;for(var o=0;o<e.length;o++){i.push({name:e[o],remotes:[]});s[e[o]]=o}if(viewState.combineLocalAndRemoteBranchLabels){n=[];for(var o=0;o<t.length;o++){if(t[o].remote!==null){var a=t[o].name.substr(t[o].remote.length+1);if(typeof s[a]==="number"){i[s[a]].remotes.push(t[o].remote);continue}}n.push(t[o])}}else{n=t}return{heads:i,remotes:n}}function De(e,t,i){var s="",n,o=e;for(n=0;n<t.length;n++){s+=t[n]!==null?'<li class="contextMenuItem" data-index="'+n+'">'+t[n].title+"</li>":'<li class="contextMenuDivider"></li>'}_e();ge.style.opacity="0";ge.className=b;ge.innerHTML=s;var a=ge.getBoundingClientRect();ge.style.left=ue.scrollLeft+o.pageX+(o.pageX+a.width<ue.clientWidth?-2:2-a.width)+"px";ge.style.top=ue.scrollTop+o.pageY+(o.pageY+a.height<ue.clientHeight?-2:2-a.height)+"px";ge.style.opacity="1";$("contextMenuItem","click",function(e){e.stopPropagation();Me();t[parseInt(e.target.closest(".contextMenuItem").dataset.index)].onClick()});ve=i;if(ve!==null)ve.classList.add(x);pe=false}function Ae(e,t,i){for(var s=0;s<t.length;s++){t[s].title='<span class="contextMenuItemCheck">'+(t[s].checked?R.check:"")+"</span>"+t[s].title}De(e,t,i);ge.classList.add("checked")}function Me(){ge.className="";ge.innerHTML="";ge.style.left="0px";ge.style.top="0px";if(ve!==null){ve.classList.remove(x);ve=null}pe=true}function Ie(e,t,i){ze(V,e,"Yes","No",function(){Ge();t()},null,i)}function Ne(e,t,i,s,n,o){ze(V,e,t,s,function(){Ge();i()},function(){Ge();n()},o)}function Fe(e,t,i,s,n){Ue(e,[{type:"text-ref",name:"",default:t}],i,function(e){return s(e[0])},n)}function Pe(e,t,i,s,n,o){Ue(e,[{type:"checkbox",name:t,value:i}],s,function(e){return n(e[0]==="checked")},o)}function We(e,t,i,s,n,o){Ue(e,[{type:"select",name:"",options:i,default:t}],s,function(e){return n(e[0])},o)}function Ue(e,n,s,o,t){var i=-1,a=n.length>1;var r=a;if(a){for(var l=0;l<n.length;l++){if(n[l].type!=="checkbox"){r=false;break}}}var h=e+'<br><table class="dialogForm '+(a?r?"multiCheckbox":"multi":"single")+'">';for(var l=0;l<n.length;l++){var c=n[l];h+="<tr>"+(a&&!r?"<td>"+c.name+"</td>":"")+"<td>";if(c.type==="select"){h+='<select id="dialogInput'+l+'">';for(var m=0;m<c.options.length;m++){h+='<option value="'+q(c.options[m].value)+'"'+(c.options[m].value===c.default?" selected":"")+">"+q(c.options[m].name)+"</option>"}h+="</select>"}else if(c.type==="checkbox"){h+='<span class="dialogFormCheckbox"><label><input id="dialogInput'+l+'" type="checkbox"'+(c.value?" checked":"")+"/>"+(a&&!r?"":c.name)+"</label></span>"}else{h+='<input id="dialogInput'+l+'" type="text" value="'+q(c.default)+'"'+(c.type==="text"&&c.placeholder!==null?' placeholder="'+q(c.placeholder)+'"':"")+"/>";if(c.type==="text-ref")i=l}h+="</td></tr>"}h+="</table>";ze(V,h,s,"Cancel",function(){if(Ce.className===b+" noInput"||Ce.className===b+" inputInvalid")return;var e=[];for(var t=0;t<n.length;t++){var i=n[t],s=k.getElementById("dialogInput"+t);if(i.type==="select"){e.push(s.value)}else if(i.type==="checkbox"){e.push(s.checked?"checked":"unchecked")}else{e.push(s.value)}}Ge();o(e)},null,t);if(i>-1){var d=k.getElementById("dialogInput"+i),u=k.getElementById("dialogAction");if(d.value==="")Ce.className=b+" noInput";d.addEventListener("keyup",function(){var e=d.value==="",t=d.value.match(p)!==null;var i=b+(e?" noInput":t?" inputInvalid":"");if(Ce.className!==i){Ce.className=i;u.title=t?"Unable to "+s+", one or more invalid characters entered.":""}})}if(n.length>0&&(n[0].type==="text"||n[0].type==="text-ref")){k.getElementById("dialogInput0").focus()}}function Ve(e,t,i,s,n){ze(z,R.alert+"Error: "+e+(t!==null?'<br><span class="messageContent errorContent">'+q(t).split("\n").join("<br>")+"</span>":""),i,"Dismiss",s,null,n)}function ze(e,t,i,s,n,o,a){Oe();xe=e;be.className=b;Ce.className=b;Ce.innerHTML=t+"<br>"+(i!==null?'<div id="dialogAction" class="roundedBtn">'+i+"</div>":"")+'<div id="dialogDismiss" class="roundedBtn">'+s+"</div>";if(i!==null&&n!==null){k.getElementById("dialogAction").addEventListener("click",n);we=n}k.getElementById("dialogDismiss").addEventListener("click",o!==null?o:Ge);ye=a;if(ye!==null)ye.classList.add(E);pe=false}function Ge(){be.className="";Ce.className="";Ce.innerHTML="";if(ye!==null){ye.classList.remove(E);ye=null}we=null;xe=null;pe=true}function Oe(){if(Ce.classList.contains(b))Ge();if(ge.classList.contains(b))Me()}k.addEventListener("click",_e);k.addEventListener("contextmenu",_e);k.addEventListener("mouseleave",_e);function _e(){if(ge.classList.contains(b))Me()}})(document,window);